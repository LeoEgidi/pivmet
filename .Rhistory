}
# quarti_sq[i, ] <-
#   elim(8, team1_ottavi, team2_ottavi)$qual
#
# quarti[i,1, ] <- c(quarti_sq[i,1], quarti_sq[i,2])
# quarti[i,2, ] <- c(quarti_sq[i,3], quarti_sq[i,4])
# quarti[i,3, ] <- c(quarti_sq[i,5], quarti_sq[i,6])
# quarti[i,4, ] <- c(quarti_sq[i,7], quarti_sq[i,8])
#
# team1_quarti = team2_quarti <- c()
# for (g in 1:4){
#   team1_quarti[g] <-(1:nteams)[teams==quarti[i,g,1]]
#   team2_quarti[g] <-(1:nteams)[teams==quarti[i,g,2]]
# }
#
# team1_quarti <- as.numeric(as.vector(team1_quarti))
# team2_quarti <- as.numeric(as.vector(team2_quarti))
#
# semi_sq[i, ] <-
#   elim(4, team1_quarti, team2_quarti, quarti[i,,])$qual
#
# semi[i,1,] <- c(semi_sq[i,1], semi_sq[i,2])
# semi[i,2,] <- c(semi_sq[i,3], semi_sq[i,4])
#
# team1_semi = team2_semi <- c()
# for (g in 1:2){
#   team1_semi[g] <-(1:nteams)[teams==semi[i,g,1]]
#   team2_semi[g] <-(1:nteams)[teams==semi[i,g,2]]
# }
#
# team1_semi <- as.numeric(as.vector(team1_semi))
# team2_semi <- as.numeric(as.vector(team2_semi))
#
# final_sq[i, ] <-
#   elim(2, team1_semi, team2_semi, semi[i,,])$qual
#
# final[i,1,]<- c( final_sq[i,1], final_sq[i,2])
#
#
#
# team1_final <-(1:nteams)[teams==final[i,1,1]]
# team2_final <-(1:nteams)[teams==final[i,1,2]]
#
#
# team1_final <- as.numeric(team1_final)
# team2_final <- as.numeric(team2_final)
#
# win[i] <-
#   elim(1, team1_final, team2_final, final[i,,])$qual
}# i
return(list(team1_quarti=team1_quarti, team2_quarti=team2_quarti))
}
ottavi(sim, 100)
library(shiny); runApp('C:/Users/leoeg/Dropbox/World Cup 2018/shiny.R')
team1
runApp('C:/Users/leoeg/Dropbox/World Cup 2018/shiny.R')
library(shiny); runApp('C:/Users/leoeg/Dropbox/World Cup 2018/shiny.R')
runApp('C:/Users/leoeg/Dropbox/World Cup 2018/shiny.R')
runApp('C:/Users/leoeg/Dropbox/World Cup 2018/shiny.R')
runApp('C:/Users/leoeg/Dropbox/World Cup 2018/shiny.R')
runApp('C:/Users/leoeg/Dropbox/World Cup 2018/shiny.R')
runApp('C:/Users/leoeg/Dropbox/World Cup 2018/shiny.R')
runApp('C:/Users/leoeg/Dropbox/World Cup 2018/shiny.R')
runApp('C:/Users/leoeg/Dropbox/World Cup 2018/shiny.R')
runApp('C:/Users/leoeg/Dropbox/World Cup 2018/shiny.R')
runApp('C:/Users/leoeg/Dropbox/World Cup 2018/shiny.R')
runApp('C:/Users/leoeg/Dropbox/World Cup 2018/shiny.R')
runApp('C:/Users/leoeg/Dropbox/World Cup 2018/shiny.R')
runApp('C:/Users/leoeg/Dropbox/World Cup 2018/shiny.R')
runApp('C:/Users/leoeg/Dropbox/World Cup 2018/shiny.R')
runApp('C:/Users/leoeg/Dropbox/World Cup 2018/shiny.R')
runApp('C:/Users/leoeg/Dropbox/World Cup 2018/shiny.R')
sim_func("France")$sim3$three_matches
runApp('C:/Users/leoeg/Dropbox/World Cup 2018/shiny.R')
as.data.frame(sim_func("France")$sim3$three_matches)
as.data.frame(sim_func("France")$sim3$three_matches)[1,]
as.data.frame(sim_func("France")$sim3$three_matches[,1:2])
as.data.frame(sim_func("France")$sim3$three_matches)[1,]
as.data.frame(sim_func("France")$sim3$three_matches)[1,1:2]
as.data.frame(t(sim_func("France")$sim3$three_matches))[1,1:2]
dim(as.data.frame(t(sim_func("France")$sim3$three_matches))[1,1:2])
dim(as.data.frame(sim_func("France")$sim3$three_matches)[1,1:2])
runApp('C:/Users/leoeg/Dropbox/World Cup 2018/shiny.R')
runApp('C:/Users/leoeg/Dropbox/World Cup 2018/shiny.R')
runApp('C:/Users/leoeg/Dropbox/World Cup 2018/shiny.R')
runApp('C:/Users/leoeg/Dropbox/World Cup 2018/shiny.R')
xx<-sim_func("France")
ss <- unica_simul(1, "France", xx)
ss$three_matches
source('C:/Users/leoeg/Dropbox/World Cup 2018/sim_func.R')
xx<-sim_func("France")
ss <- unica_simul(1, "France", xx)
ss$three_matches
as.data.frame(ss$three_matches)
as.data.frame(ss$three_matches)[,1:2]
as.data.frame(ss$three_matches)[1,1:2]
runApp('C:/Users/leoeg/Dropbox/World Cup 2018/shiny.R')
runApp('C:/Users/leoeg/Dropbox/World Cup 2018/shiny.R')
runApp('C:/Users/leoeg/Dropbox/World Cup 2018/shiny.R')
sim_func("Russia")
squadra="Russia"
sim1 <- initial_simulation(N, K, team1, team2, ranking,
p_norm, nteams, nsims,
squadra,int=1, sim1=NULL, sim2=NULL)
sim2 <- initial_simulation(N, K, team1, team2, ranking,
p_norm, nteams, nsims,
squadra,int=2,
sim1=sim1, sim2=NULL)
sim3 <- initial_simulation(N, K, team1, team2, ranking,
p_norm, nteams, nsims,
squadra,int=3,
sim1=sim1, sim2=sim2)
sim_func("France")
sim3$girone[1,1]
sim3$girone
if (sim3$girone[1,1]==squadra | sim3$girone[2,1]==squadra){
sim4 <- ottavi(sim3, nsims)
if (sum(sim4$team1_quarti == squadra)==1 |
sum(sim4$team2_quarti == squadra)==1){
sim5 <- quarti(sim3, sim4, nsims)
if (sum(sim5$team1_semi == squadra)==1 |
sum(sim5$team2_semi == squadra)==1){
sim6 <- semi(sim3, sim5, nsims)
if  (sim6$team1_final == squadra |
sim6$team2_final == squadra)  {
sim7 <- final(sim3, sim6, nsims)
if (sim7$winner==squadra){
return(list(sim1=sim1, sim2=sim2, sim3=sim3, sim4 = sim4,
sim5=sim5, sim6= sim6, sim7=sim7))
}else{
return(list(sim1=sim1, sim2=sim2, sim3=sim3, sim4 = sim4,
sim5=sim5, sim6= sim6))
}
}else{
return(list(sim1=sim1, sim2=sim2, sim3=sim3, sim4 = sim4,
sim5=sim5))
}
}else{
return(list(sim1=sim1, sim2=sim2, sim3=sim3, sim4 = sim4))
}
}
}else{
return(list(sim1=sim1, sim2=sim2, sim3=sim3))
}
sim4$team1_quarti
sim4$team2_quarti
sum(sim4$team1_quarti == squadra)==1 |
sum(sim4$team2_quarti == squadra)==1
runApp('C:/Users/leoeg/Dropbox/World Cup 2018/shiny.R')
runApp('C:/Users/leoeg/Dropbox/World Cup 2018/shiny.R')
runApp('C:/Users/leoeg/Dropbox/World Cup 2018/shiny.R')
runApp('C:/Users/leoeg/Dropbox/World Cup 2018/shiny.R')
runApp('C:/Users/leoeg/Dropbox/World Cup 2018/shiny.R')
runApp('C:/Users/leoeg/Dropbox/World Cup 2018/shiny.R')
runApp('C:/Users/leoeg/Dropbox/World Cup 2018/shiny.R')
runApp('C:/Users/leoeg/Dropbox/World Cup 2018/shiny.R')
runApp('C:/Users/leoeg/Dropbox/World Cup 2018/shiny.R')
runApp('C:/Users/leoeg/Dropbox/World Cup 2018/shiny.R')
runApp('C:/Users/leoeg/Dropbox/World Cup 2018/shiny.R')
runApp('C:/Users/leoeg/Dropbox/World Cup 2018/shiny.R')
runApp('C:/Users/leoeg/Dropbox/World Cup 2018/shiny.R')
runApp('C:/Users/leoeg/Dropbox/World Cup 2018/shiny.R')
runApp('C:/Users/leoeg/Dropbox/World Cup 2018/shiny.R')
library(shiny); runApp('C:/Users/leoeg/Dropbox/World Cup 2018/shiny.R')
runApp('C:/Users/leoeg/Dropbox/World Cup 2018/shiny.R')
runApp('C:/Users/leoeg/Dropbox/World Cup 2018/shiny.R')
runApp('C:/Users/leoeg/Dropbox/World Cup 2018/shiny.R')
runApp('C:/Users/leoeg/Dropbox/World Cup 2018/shiny.R')
runApp('C:/Users/leoeg/Dropbox/World Cup 2018/shiny.R')
library(shiny); runApp('C:/Users/leoeg/Dropbox/World Cup 2018/shiny.R')
runApp('C:/Users/leoeg/Dropbox/World Cup 2018/shiny.R')
runApp('C:/Users/leoeg/Dropbox/World Cup 2018/shiny.R')
runApp('C:/Users/leoeg/Dropbox/World Cup 2018/shiny.R')
runApp('C:/Users/leoeg/Dropbox/World Cup 2018/shiny.R')
runApp('C:/Users/leoeg/Dropbox/World Cup 2018/shiny.R')
spain <- c(2.1, 1.25, 1.36, 1.35, 2.14)
sum(spain)
portugal <- c(2.1, 1.65, 1.36, 1.56)
sum(portugal)
runApp('C:/Users/leoeg/Dropbox/World Cup 2018/shiny.R')
runApp('C:/Users/leoeg/Dropbox/World Cup 2018/shiny.R')
runApp('C:/Users/leoeg/Dropbox/World Cup 2018/shiny.R')
runApp('C:/Users/leoeg/Dropbox/World Cup 2018/shiny.R')
runApp('C:/Users/leoeg/Dropbox/World Cup 2018/shiny.R')
runApp('C:/Users/leoeg/Dropbox/World Cup 2018/shiny.R')
runApp('C:/Users/leoeg/Dropbox/World Cup 2018/shiny.R')
runApp('C:/Users/leoeg/Dropbox/World Cup 2018/shiny.R')
library(shiny); runApp('C:/Users/leoeg/Dropbox/World Cup 2018/shiny.R')
#caricamento
germania<- c(1.5, 1.44, 1.25, 1.44, 1.48, 1.61, 1.84)
sum(germania)
library(shiny); runApp('C:/Users/leoeg/Dropbox/World Cup 2018/shiny.R')
library(shiny); runApp('C:/Users/leoeg/Dropbox/World Cup 2018/shiny.R')
library(shiny); runApp('C:/Users/leoeg/Dropbox/World Cup 2018/shiny.R')
library(shiny); runApp('C:/Users/leoeg/Dropbox/World Cup 2018/shiny.R')
R.home('bin')
setwd("~/GitHub/pivmet")
devtools::build()
library(devtools)
build()
library(pivmet)
devtools::document()
f <- devtools::build("pivmet")
system(paste0("R CMD INSTALL --build ", f))
f <- devtools::build()
system(paste0("R CMD INSTALL --build ", f))
devtools::use_build_ignore(c(".Rd2pdf10452"))
devtools::use_build_ignore(c(".Rd2pdf10452", "pivmet.pdf"))
library(pivmet)
devtools::document()
rstan:::rstudio_stanc("C:/Users/leoeg/Dropbox/Bernardinelli Fazia/pedigree_model_two_samples.stan")
rstan:::rstudio_stanc("C:/Users/leoeg/Dropbox/Bernardinelli Fazia/pedigree_model_two_samples.stan")
rstan:::rstudio_stanc("C:/Users/leoeg/Dropbox/Bernardinelli Fazia/pedigree_model_two_samples.stan")
rstan:::rstudio_stanc("C:/Users/leoeg/Dropbox/Bernardinelli Fazia/pedigree_model_two_samples.stan")
rstan:::rstudio_stanc("C:/Users/leoeg/Dropbox/Bernardinelli Fazia/pedigree_model_two_samples.stan")
dati <- read.table("dati_IL12A.txt", sep="", dec=",", header =TRUE)
# originary quantities
Y <- dati$ms
N <- length(Y)
X_obs <- dati$il12a_hpa001886
setwd("C:/Users/leoeg/Dropbox/Bernardinelli Fazia")
dati <- read.table("dati_IL12A.txt", sep="", dec=",", header =TRUE)
# originary quantities
Y <- dati$ms
N <- length(Y)
X_obs <- dati$il12a_hpa001886
Z <- dati[,8:83]
J <- length(Z[1,])
# find NA values and build new dataset without NA
nobs_X <- (1:N)[!is.na(X_obs)]
vec_row_Z <- c()
for (n in 1:N){
if (sum(is.na(Z[n,])) ==0){
vec_row_Z[n] <- n
}else{
vec_row_Z[n] <-0
}
}
nobs_Z <- vec_row_Z[vec_row_Z!=0]
N_1_obs <- intersect(nobs_X, nobs_Z)  # sample size sample 1
N_2_obs <- length(nobs_Z)
# redefinition of the observed variables
Y_1 <- Y[N_1_obs]
Y_2 <- Y[N_2_obs]
N_1 <- length(new_Y_1)
# redefinition of the observed variables
Y_1 <- Y[N_1_obs]
Y_2 <- Y[N_2_obs]
N_1 <- length(Y_1)
N_2 <- length(Y_2)
X_obs <- as.numeric(as.vector(X_obs[N_1_obs]))
Z_1 <- dati[N_1,8:83]
Z_1
dim(Z1)
dim(Z_1)
Z_2 <- dati[N_2_obs,8:83]
J <- length(Z_1[1,])
pedigree_matrix_1 <- read.csv2(file= "MatriceKinship.csv", sep =",", header = FALSE)
pedigree_matrix_1 <- pedigree_matrix_1[c(-1), c(-1)]
pedigree_matrix_1 <- pedigree_matrix_1[N_1_obs, N_1_obs]
pedigree_matrix_2 <- read.csv2(file= "MatriceKinship.csv", sep =",", header = FALSE)
pedigree_matrix_2 <- pedigree_matrix_2[c(-1), c(-1)]
pedigree_matrix_2 <- pedigree_matrix_2[N_2_obs, N_2_obs]
for (j in 1:N_1){
for (i in 1:N_1){
if (pedigree_matrix_1[i,j]!=pedigree_matrix_1[j,i]){
pedigree_matrix_1[j,i]=pedigree_matrix_1[i,j]
}
}
}
for (j in 1:N_2){
for (i in 1:N_2){
if (pedigree_matrix_2[i,j]!=pedigree_matrix_2[j,i]){
pedigree_matrix_2[j,i]=pedigree_matrix_2[i,j]
}
}
}
N_2
Y_2
N_1_obs <- intersect(nobs_X, nobs_Z)  # sample size sample 1
N_2_obs <- nobs_Z
# redefinition of the observed variables
Y_1 <- Y[N_1_obs]
Y_2 <- Y[N_2_obs]
N_1 <- length(Y_1)
N_2 <- length(Y_2)
X_obs <- as.numeric(as.vector(X_obs[N_1_obs]))
Z_1 <- dati[N_1_obs,8:83]
Z_2 <- dati[N_2_obs,8:83]
J <- length(Z_1[1,])
pedigree_matrix_1 <- read.csv2(file= "MatriceKinship.csv", sep =",", header = FALSE)
pedigree_matrix_1 <- pedigree_matrix_1[c(-1), c(-1)]
pedigree_matrix_1 <- pedigree_matrix_1[N_1_obs, N_1_obs]
pedigree_matrix_2 <- read.csv2(file= "MatriceKinship.csv", sep =",", header = FALSE)
pedigree_matrix_2 <- pedigree_matrix_2[c(-1), c(-1)]
pedigree_matrix_2 <- pedigree_matrix_2[N_2_obs, N_2_obs]
exitus <- matrix(NA, new_N, new_N)
for (j in 1:N_1){
for (i in 1:N_1){
if (pedigree_matrix_1[i,j]!=pedigree_matrix_1[j,i]){
pedigree_matrix_1[j,i]=pedigree_matrix_1[i,j]
}
}
}
for (j in 1:N_2){
for (i in 1:N_2){
if (pedigree_matrix_2[i,j]!=pedigree_matrix_2[j,i]){
pedigree_matrix_2[j,i]=pedigree_matrix_2[i,j]
}
}
}
N_2
N_1
is.positive.definite(pedigree_matrix_1)
#       exitus[i,j]="TRUE"
#       exitus[j,i]="TRUE"
#     }
#     }}
#
# sum(exitus =="FALSE")
#
# for (n in 1:new_N){
#   pedigree_matrix[,n] <- as.numeric(as.vector(pedigree_matrix[,n]))
# }
library(corpcor)
is.positive.definite(pedigree_matrix_1)
#       exitus[i,j]="TRUE"
#       exitus[j,i]="TRUE"
#     }
#     }}
#
# sum(exitus =="FALSE")
#
# for (n in 1:new_N){
#   pedigree_matrix[,n] <- as.numeric(as.vector(pedigree_matrix[,n]))
# }
library(corpcor)
is.positive.definite(pedigree_matrix_1)
is.positive.definite(pedigree_matrix_2)
pedigree_matrix_1
N_1_obs
N_2_obs
for (j in 1:N_1){
for (i in 1:N_1){
if (pedigree_matrix_1[i,j]!=pedigree_matrix_1[j,i]){
pedigree_matrix_1[j,i]=pedigree_matrix_1[i,j]
}
}
}
for (j in 1:N_2){
for (i in 1:N_2){
if (pedigree_matrix_2[i,j]!=pedigree_matrix_2[j,i]){
pedigree_matrix_2[j,i]=pedigree_matrix_2[i,j]
}
}
}
N_2
is.positive.definite(pedigree_matrix_1)
pedigree_matrix <- read.csv2(file= "MatriceKinship.csv", sep =",", header = FALSE)
pedigree_matrix_1 <- pedigree_matrix[c(-1), c(-1)]
pedigree_matrix_1 <- pedigree_matrix_1[N_1_obs, N_1_obs]
dim(pedigree_matrix_1)
pedigree_matrix_2 <- pedigree_matrix[c(-1), c(-1)]
pedigree_matrix_2 <- pedigree_matrix_2[N_2_obs, N_2_obs]
pedigree_matrix_2
dim(pedigree_matrix_2)
for (j in 1:N_1){
for (i in 1:N_1){
if (pedigree_matrix_1[i,j]!=pedigree_matrix_1[j,i]){
pedigree_matrix_1[j,i]=pedigree_matrix_1[i,j]
}
}
}
for (j in 1:N_2){
for (i in 1:N_2){
if (pedigree_matrix_2[i,j]!=pedigree_matrix_2[j,i]){
pedigree_matrix_2[j,i]=pedigree_matrix_2[i,j]
}
}
}
#       exitus[i,j]="TRUE"
#       exitus[j,i]="TRUE"
#     }
#     }}
#
# sum(exitus =="FALSE")
#
# for (n in 1:new_N){
#   pedigree_matrix[,n] <- as.numeric(as.vector(pedigree_matrix[,n]))
# }
library(corpcor)
is.positive.definite(pedigree_matrix_1)
is.positive.definite(pedigree_matrix_2)
rstan:::rstudio_stanc("pedigree_model_two_samples.stan")
#       exitus[i,j]="FALSE"
#       exitus[j,i]="FALSE"
#     }else{
#       exitus[i,j]="TRUE"
#       exitus[j,i]="TRUE"
#     }
#     }}
#
# sum(exitus =="FALSE")
#
for (n in 1:N_1){
pedigree_matrix_1[,n] <- as.numeric(as.vector(pedigree_matrix_1[,n]))
}
for (n in 1:N_2){
pedigree_matrix_2[,n] <- as.numeric(as.vector(pedigree_matrix_2[,n]))
}
library(corpcor)
is.positive.definite(pedigree_matrix_1)
is.positive.definite(pedigree_matrix_2)
stan_data <- list(Y_1=Y_1,
Y_2=Y_2,
N_1=N_1,
N_2 =N_2,
X_obs=X_obs,
J=new_J,
Z_1=Z_1,
Z_2=Z_2,
pedigree_Sigma_1 = pedigree_matrix_1,
pedigree_Sigma_2 = pedigree_matrix_2)
stan_data <- list(Y_1=Y_1,
Y_2=Y_2,
N_1=N_1,
N_2 =N_2,
X_obs=X_obs,
J=J,
Z_1=Z_1,
Z_2=Z_2,
pedigree_Sigma_1 = pedigree_matrix_1,
pedigree_Sigma_2 = pedigree_matrix_2)
model <- stan('pedigree_model_two_samples.stan',
data = stan_data, iter = 200, chains =4, cores =4
,control = list(adapt_delta =0.99, max_treedepth=13))
library(rstan)
model <- stan('pedigree_model_two_samples.stan',
data = stan_data, iter = 200, chains =4, cores =4
,control = list(adapt_delta =0.99, max_treedepth=13))
X_obs
# originary quantities
Y <- dati$ms
N <- length(Y)
X_obs <- dati$il12a_hpa001886
Z <- dati[,8:83]
J <- length(Z[1,])
# find NA values and build new dataset without NA
nobs_X <- (1:N)[!is.na(X_obs)]
X_obs
X_obs
N_1_obs
N_2_obs
X_obs[N_1_obs]
X_obs <- as.numeric(as.vector(X_obs[N_1_obs]))
X_obs
Z_1 <- dati[N_1_obs,8:83]
Z_2 <- dati[N_2_obs,8:83]
J <- length(Z_1[1,])
pedigree_matrix <- read.csv2(file= "MatriceKinship.csv", sep =",", header = FALSE)
pedigree_matrix_1 <- pedigree_matrix[c(-1), c(-1)]
pedigree_matrix_1 <- pedigree_matrix_1[N_1_obs, N_1_obs]
pedigree_matrix_2 <- pedigree_matrix[c(-1), c(-1)]
pedigree_matrix_2 <- pedigree_matrix_2[N_2_obs, N_2_obs]
sum(is.na(X_obs))
#exitus <- matrix(NA, new_N, new_N)
for (j in 1:N_1){
for (i in 1:N_1){
if (pedigree_matrix_1[i,j]!=pedigree_matrix_1[j,i]){
pedigree_matrix_1[j,i]=pedigree_matrix_1[i,j]
}
}
}
for (j in 1:N_2){
for (i in 1:N_2){
if (pedigree_matrix_2[i,j]!=pedigree_matrix_2[j,i]){
pedigree_matrix_2[j,i]=pedigree_matrix_2[i,j]
}
}
}
#       exitus[i,j]="FALSE"
#       exitus[j,i]="FALSE"
#     }else{
#       exitus[i,j]="TRUE"
#       exitus[j,i]="TRUE"
#     }
#     }}
#
# sum(exitus =="FALSE")
#
for (n in 1:N_1){
pedigree_matrix_1[,n] <- as.numeric(as.vector(pedigree_matrix_1[,n]))
}
for (n in 1:N_2){
pedigree_matrix_2[,n] <- as.numeric(as.vector(pedigree_matrix_2[,n]))
}
library(corpcor)
is.positive.definite(pedigree_matrix_1)
is.positive.definite(pedigree_matrix_2)
stan_data <- list(Y_1=Y_1,
Y_2=Y_2,
N_1=N_1,
N_2 =N_2,
X_obs=X_obs,
J=J,
Z_1=Z_1,
Z_2=Z_2,
pedigree_Sigma_1 = pedigree_matrix_1,
pedigree_Sigma_2 = pedigree_matrix_2)
model <- stan('pedigree_model_two_samples.stan',
data = stan_data, iter = 200, chains =4, cores =4
,control = list(adapt_delta =0.99, max_treedepth=13))
