for (n in 1:nmatches){
p_elim[n] <-
exp(
(att[i, team1_elim[n]]-
att[i, team2_elim[n]])+
(def[i,team2_elim[n]]-
def[i, team1_elim[n]])
+
2.5*(ranking[team1_elim[n]]-
ranking[team2_elim[n]]))/
(1+exp(
(att[i, team1_elim[n]]-
att[i, team2_elim[n]])+
(def[i,team2_elim[n]]-
def[i, team1_elim[n]])+
2.5*(ranking[team1_elim[n]]-
ranking[team2_elim[n]])))
index[n] <- sample(1:2, 1,
prob=c(p_elim[n],1-p_elim[n]))
qual[n] <- turno[n, index[n]]
}
return(list(qual=qual, p_elim=p_elim))
}
quarti_sq[i, ] <-
elim(8, team1_ottavi, team2_ottavi,
ottavi[i,,])$qual
quarti[i,1, ] <- c(quarti_sq[i,1], quarti_sq[i,2])
quarti[i,2, ] <- c(quarti_sq[i,3], quarti_sq[i,4])
quarti[i,3, ] <- c(quarti_sq[i,5], quarti_sq[i,6])
quarti[i,4, ] <- c(quarti_sq[i,7], quarti_sq[i,8])
team1_quarti = team2_quarti <- c()
for (g in 1:4){
team1_quarti[g] <-(1:nteams)[teams==quarti[i,g,1]]
team2_quarti[g] <-(1:nteams)[teams==quarti[i,g,2]]
}
team1_quarti <- as.numeric(as.vector(team1_quarti))
team2_quarti <- as.numeric(as.vector(team2_quarti))
semi_sq[i, ] <-
elim(4, team1_quarti, team2_quarti, quarti[i,,])$qual
semi[i,1,] <- c(semi_sq[i,1], semi_sq[i,2])
semi[i,2,] <- c(semi_sq[i,3], semi_sq[i,4])
team1_semi = team2_semi <- c()
for (g in 1:2){
team1_semi[g] <-(1:nteams)[teams==semi[i,g,1]]
team2_semi[g] <-(1:nteams)[teams==semi[i,g,2]]
}
team1_semi <- as.numeric(as.vector(team1_semi))
team2_semi <- as.numeric(as.vector(team2_semi))
final_sq[i, ] <-
elim(2, team1_semi, team2_semi, semi[i,,])$qual
final[i,1,]<- c( final_sq[i,1], final_sq[i,2])
team1_final <-(1:nteams)[teams==final[i,1,1]]
team2_final <-(1:nteams)[teams==final[i,1,2]]
team1_final <- as.numeric(team1_final)
team2_final <- as.numeric(team2_final)
win[i] <-
elim(1, team1_final, team2_final, final[i,,])$qual
} # i
results<- apply(y, c(2,3), mean)
max_prob_value <- apply(results,1,
function(x) which.max(x))
ex_fin <- c()
for (n in 1:N){
ex_fin <- exitus[n, max_prob_value]
}
if (int ==2 & is.null(sim1)==FALSE){
ex_fin[1:16] <- as.vector(sim1$ex_fin)[1:16]
}else if(int==3 &is.null(sim1)==FALSE & is.null(sim2)==FALSE){
ex_fin[1:32] <- as.vector(sim2$ex_fin)[1:32]
}
tab <- cbind(teams[team1[1:N]],
teams[team2[1:N]], results,ex_fin)
gironi_class <- cbind(
conta_punti_girone(ex_fin, girone_a)$class,
conta_punti_girone(ex_fin, girone_b)$class,
conta_punti_girone(ex_fin, girone_c)$class,
conta_punti_girone(ex_fin, girone_d)$class,
conta_punti_girone(ex_fin, girone_e)$class,
conta_punti_girone(ex_fin, girone_f)$class,
conta_punti_girone(ex_fin, girone_g)$class,
conta_punti_girone(ex_fin, girone_h)$class)
three_matches <-
subset(tab,
tab[,1]==sel_team | tab[,2]==sel_team )
gironi <- matrix(c(girone_a, girone_b, girone_c,
girone_d, girone_e, girone_f, girone_g,girone_h),
8, 4, byrow=TRUE)
team_ottavi <- gironi_class[1:2, c(1,3,5,7,9,11,13,15) ]
quale_girone <- function(gironi){
d<- c()
for (n in 1:8){
d[n] <- sum(sel_team==gironi[n,])
}
return(d)
}
girone <- (1:8)[quale_girone(gironi)==1]
return(list(tab=tab, gironi_class=gironi_class,
win=win,
att=att, def=def, gamma=gamma, phi=phi, y=y,
three_matches = three_matches,
girone=gironi_class[, ((girone*2)-1 ):(girone*2)],
ex_fin=ex_fin,
team_ottavi =  team_ottavi,
ottavi = ottavi))
}
sim <- sim_func("France")$sim3$ottavi
dim(sim)
sim[1,,]
sim <- sim_func("France")$sim3
elim_diretta <- function(sim, nsims){
team1_ottavi = team2_ottavi <- c()
for (g in 1:8){
team1_ottavi[g] <-(1:nteams)[teams==sim$team_ottavi[1,g]]
team2_ottavi[g] <-(1:nteams)[teams==sim$team_ottavi[2,g]]
}
for (i in 1:nsims){
team1_ottavi <- as.numeric(as.vector(team1_ottavi))
team2_ottavi <- as.numeric(as.vector(team2_ottavi))
elim<-function(nmatches, team1_elim,
team2_elim){
qual <- c()
p_elim = index= c()
for (n in 1:nmatches){
p_elim[n] <-
exp(
(sim$att[i, team1_elim[n]]-
sim$att[i, team2_elim[n]])+
(sim$def[i,team2_elim[n]]-
sim$def[i, team1_elim[n]])
+
2.5*(ranking[team1_elim[n]]-
ranking[team2_elim[n]]))/
(1+exp(
(sim$att[i, team1_elim[n]]-
sim$att[i, team2_elim[n]])+
(sim$def[i,team2_elim[n]]-
sim$def[i, team1_elim[n]])+
2.5*(ranking[team1_elim[n]]-
ranking[team2_elim[n]])))
index[n] <- sample(1:2, 1,
prob=c(p_elim[n],1-p_elim[n]))
turno <- cbind(team1_ottavi, team2_ottavi)
qual[n] <- turno[n, index[n]]
}
return(list(qual=qual, p_elim=p_elim))
}
quarti_sq[i, ] <-
elim(8, team1_ottavi, team2_ottavi)$qual
quarti[i,1, ] <- c(quarti_sq[i,1], quarti_sq[i,2])
quarti[i,2, ] <- c(quarti_sq[i,3], quarti_sq[i,4])
quarti[i,3, ] <- c(quarti_sq[i,5], quarti_sq[i,6])
quarti[i,4, ] <- c(quarti_sq[i,7], quarti_sq[i,8])
team1_quarti = team2_quarti <- c()
for (g in 1:4){
team1_quarti[g] <-(1:nteams)[teams==quarti[i,g,1]]
team2_quarti[g] <-(1:nteams)[teams==quarti[i,g,2]]
}
team1_quarti <- as.numeric(as.vector(team1_quarti))
team2_quarti <- as.numeric(as.vector(team2_quarti))
semi_sq[i, ] <-
elim(4, team1_quarti, team2_quarti, quarti[i,,])$qual
semi[i,1,] <- c(semi_sq[i,1], semi_sq[i,2])
semi[i,2,] <- c(semi_sq[i,3], semi_sq[i,4])
team1_semi = team2_semi <- c()
for (g in 1:2){
team1_semi[g] <-(1:nteams)[teams==semi[i,g,1]]
team2_semi[g] <-(1:nteams)[teams==semi[i,g,2]]
}
team1_semi <- as.numeric(as.vector(team1_semi))
team2_semi <- as.numeric(as.vector(team2_semi))
final_sq[i, ] <-
elim(2, team1_semi, team2_semi, semi[i,,])$qual
final[i,1,]<- c( final_sq[i,1], final_sq[i,2])
team1_final <-(1:nteams)[teams==final[i,1,1]]
team2_final <-(1:nteams)[teams==final[i,1,2]]
team1_final <- as.numeric(team1_final)
team2_final <- as.numeric(team2_final)
win[i] <-
elim(1, team1_final, team2_final, final[i,,])$qual
}# i
return(list(team1_quarti=team1_quarti, team2_quarti=team2_quarti))
}
elim_diretta(sim, 100)
sim$gironi_class
ottavi <- function(sim, nsims){
ottavi <- matrix(NA, 8,2)
ottavi[1,] <- c(sim$gironi_class[1,5], sim$gironi_class[2,7])
ottavi[2,] <- c(sim$gironi_class[1,1],  sim$gironi_class[2,3])
ottavi[3,] <- c(sim$gironi_class[1,9],  sim$gironi_class[2,11])
ottavi[4,] <- c(sim$gironi_class[1,13],  sim$gironi_class[2,13])
ottavi[5,] <- c(sim$gironi_class[1,15],  sim$gironi_class[2,7])
ottavi[6,] <- c(sim$gironi_class[1,11],  sim$gironi_class[2,9])
ottavi[7,] <- c(sim$gironi_class[1,3],  sim$gironi_class[2,1])
ottavi[8,] <- c(sim$gironi_class[1,5],  sim$gironi_class[2,5])
team1_ottavi = team2_ottavi <- c()
for (g in 1:8){
team1_ottavi[g] <-(1:nteams)[teams==sim$team_ottavi[1,g]]
team2_ottavi[g] <-(1:nteams)[teams==sim$team_ottavi[2,g]]
}
for (i in 1:nsims){
team1_ottavi <- as.numeric(as.vector(team1_ottavi))
team2_ottavi <- as.numeric(as.vector(team2_ottavi))
elim<-function(nmatches, team1_elim,
team2_elim){
qual <- c()
p_elim = index= c()
for (n in 1:nmatches){
p_elim[n] <-
exp(
(sim$att[i, team1_elim[n]]-
sim$att[i, team2_elim[n]])+
(sim$def[i,team2_elim[n]]-
sim$def[i, team1_elim[n]])
+
2.5*(ranking[team1_elim[n]]-
ranking[team2_elim[n]]))/
(1+exp(
(sim$att[i, team1_elim[n]]-
sim$att[i, team2_elim[n]])+
(sim$def[i,team2_elim[n]]-
sim$def[i, team1_elim[n]])+
2.5*(ranking[team1_elim[n]]-
ranking[team2_elim[n]])))
index[n] <- sample(1:2, 1,
prob=c(p_elim[n],1-p_elim[n]))
turno <- cbind(team1_ottavi, team2_ottavi)
qual[n] <- turno[n, index[n]]
}
return(list(qual=qual, p_elim=p_elim))
}
quarti_sq[i, ] <-
elim(8, team1_ottavi, team2_ottavi)$qual
quarti[i,1, ] <- c(quarti_sq[i,1], quarti_sq[i,2])
quarti[i,2, ] <- c(quarti_sq[i,3], quarti_sq[i,4])
quarti[i,3, ] <- c(quarti_sq[i,5], quarti_sq[i,6])
quarti[i,4, ] <- c(quarti_sq[i,7], quarti_sq[i,8])
team1_quarti = team2_quarti <- c()
for (g in 1:4){
team1_quarti[g] <-(1:nteams)[teams==quarti[i,g,1]]
team2_quarti[g] <-(1:nteams)[teams==quarti[i,g,2]]
}
team1_quarti <- as.numeric(as.vector(team1_quarti))
team2_quarti <- as.numeric(as.vector(team2_quarti))
semi_sq[i, ] <-
elim(4, team1_quarti, team2_quarti, quarti[i,,])$qual
semi[i,1,] <- c(semi_sq[i,1], semi_sq[i,2])
semi[i,2,] <- c(semi_sq[i,3], semi_sq[i,4])
team1_semi = team2_semi <- c()
for (g in 1:2){
team1_semi[g] <-(1:nteams)[teams==semi[i,g,1]]
team2_semi[g] <-(1:nteams)[teams==semi[i,g,2]]
}
team1_semi <- as.numeric(as.vector(team1_semi))
team2_semi <- as.numeric(as.vector(team2_semi))
final_sq[i, ] <-
elim(2, team1_semi, team2_semi, semi[i,,])$qual
final[i,1,]<- c( final_sq[i,1], final_sq[i,2])
team1_final <-(1:nteams)[teams==final[i,1,1]]
team2_final <-(1:nteams)[teams==final[i,1,2]]
team1_final <- as.numeric(team1_final)
team2_final <- as.numeric(team2_final)
win[i] <-
elim(1, team1_final, team2_final, final[i,,])$qual
}# i
return(list(team1_quarti=team1_quarti, team2_quarti=team2_quarti))
}
sim$gironi_class
ottavi(sim, 100)
ottavi <- function(sim, nsims){
ottavi <- matrix(NA, 8,2)
ottavi[1,] <- c(sim$gironi_class[1,5], sim$gironi_class[2,7])
ottavi[2,] <- c(sim$gironi_class[1,1],  sim$gironi_class[2,3])
ottavi[3,] <- c(sim$gironi_class[1,9],  sim$gironi_class[2,11])
ottavi[4,] <- c(sim$gironi_class[1,13],  sim$gironi_class[2,13])
ottavi[5,] <- c(sim$gironi_class[1,15],  sim$gironi_class[2,7])
ottavi[6,] <- c(sim$gironi_class[1,11],  sim$gironi_class[2,9])
ottavi[7,] <- c(sim$gironi_class[1,3],  sim$gironi_class[2,1])
ottavi[8,] <- c(sim$gironi_class[1,5],  sim$gironi_class[2,5])
team1_ottavi = team2_ottavi <- c()
for (g in 1:8){
team1_ottavi[g] <-(1:nteams)[teams==sim$team_ottavi[1,g]]
team2_ottavi[g] <-(1:nteams)[teams==sim$team_ottavi[2,g]]
}
for (i in 1:nsims){
team1_ottavi <- as.numeric(as.vector(team1_ottavi))
team2_ottavi <- as.numeric(as.vector(team2_ottavi))
elim<-function(nmatches, team1_elim,
team2_elim){
qual <- c()
p_elim = index= c()
for (n in 1:nmatches){
p_elim[n] <-
exp(
(sim$att[i, team1_elim[n]]-
sim$att[i, team2_elim[n]])+
(sim$def[i,team2_elim[n]]-
sim$def[i, team1_elim[n]])
+
2.5*(ranking[team1_elim[n]]-
ranking[team2_elim[n]]))/
(1+exp(
(sim$att[i, team1_elim[n]]-
sim$att[i, team2_elim[n]])+
(sim$def[i,team2_elim[n]]-
sim$def[i, team1_elim[n]])+
2.5*(ranking[team1_elim[n]]-
ranking[team2_elim[n]])))
index[n] <- sample(1:2, 1,
prob=c(p_elim[n],1-p_elim[n]))
turno <- cbind(team1_ottavi, team2_ottavi)
qual[n] <- turno[n, index[n]]
}
return(list(qual=qual, p_elim=p_elim))
}
# quarti_sq[i, ] <-
#   elim(8, team1_ottavi, team2_ottavi)$qual
#
# quarti[i,1, ] <- c(quarti_sq[i,1], quarti_sq[i,2])
# quarti[i,2, ] <- c(quarti_sq[i,3], quarti_sq[i,4])
# quarti[i,3, ] <- c(quarti_sq[i,5], quarti_sq[i,6])
# quarti[i,4, ] <- c(quarti_sq[i,7], quarti_sq[i,8])
#
# team1_quarti = team2_quarti <- c()
# for (g in 1:4){
#   team1_quarti[g] <-(1:nteams)[teams==quarti[i,g,1]]
#   team2_quarti[g] <-(1:nteams)[teams==quarti[i,g,2]]
# }
#
# team1_quarti <- as.numeric(as.vector(team1_quarti))
# team2_quarti <- as.numeric(as.vector(team2_quarti))
#
# semi_sq[i, ] <-
#   elim(4, team1_quarti, team2_quarti, quarti[i,,])$qual
#
# semi[i,1,] <- c(semi_sq[i,1], semi_sq[i,2])
# semi[i,2,] <- c(semi_sq[i,3], semi_sq[i,4])
#
# team1_semi = team2_semi <- c()
# for (g in 1:2){
#   team1_semi[g] <-(1:nteams)[teams==semi[i,g,1]]
#   team2_semi[g] <-(1:nteams)[teams==semi[i,g,2]]
# }
#
# team1_semi <- as.numeric(as.vector(team1_semi))
# team2_semi <- as.numeric(as.vector(team2_semi))
#
# final_sq[i, ] <-
#   elim(2, team1_semi, team2_semi, semi[i,,])$qual
#
# final[i,1,]<- c( final_sq[i,1], final_sq[i,2])
#
#
#
# team1_final <-(1:nteams)[teams==final[i,1,1]]
# team2_final <-(1:nteams)[teams==final[i,1,2]]
#
#
# team1_final <- as.numeric(team1_final)
# team2_final <- as.numeric(team2_final)
#
# win[i] <-
#   elim(1, team1_final, team2_final, final[i,,])$qual
}# i
return(list(team1_quarti=team1_quarti, team2_quarti=team2_quarti))
}
ottavi(sim, 100)
library(shiny); runApp('C:/Users/leoeg/Dropbox/World Cup 2018/shiny.R')
team1
runApp('C:/Users/leoeg/Dropbox/World Cup 2018/shiny.R')
library(shiny); runApp('C:/Users/leoeg/Dropbox/World Cup 2018/shiny.R')
runApp('C:/Users/leoeg/Dropbox/World Cup 2018/shiny.R')
runApp('C:/Users/leoeg/Dropbox/World Cup 2018/shiny.R')
runApp('C:/Users/leoeg/Dropbox/World Cup 2018/shiny.R')
runApp('C:/Users/leoeg/Dropbox/World Cup 2018/shiny.R')
runApp('C:/Users/leoeg/Dropbox/World Cup 2018/shiny.R')
runApp('C:/Users/leoeg/Dropbox/World Cup 2018/shiny.R')
runApp('C:/Users/leoeg/Dropbox/World Cup 2018/shiny.R')
runApp('C:/Users/leoeg/Dropbox/World Cup 2018/shiny.R')
runApp('C:/Users/leoeg/Dropbox/World Cup 2018/shiny.R')
runApp('C:/Users/leoeg/Dropbox/World Cup 2018/shiny.R')
runApp('C:/Users/leoeg/Dropbox/World Cup 2018/shiny.R')
runApp('C:/Users/leoeg/Dropbox/World Cup 2018/shiny.R')
runApp('C:/Users/leoeg/Dropbox/World Cup 2018/shiny.R')
runApp('C:/Users/leoeg/Dropbox/World Cup 2018/shiny.R')
runApp('C:/Users/leoeg/Dropbox/World Cup 2018/shiny.R')
sim_func("France")$sim3$three_matches
runApp('C:/Users/leoeg/Dropbox/World Cup 2018/shiny.R')
as.data.frame(sim_func("France")$sim3$three_matches)
as.data.frame(sim_func("France")$sim3$three_matches)[1,]
as.data.frame(sim_func("France")$sim3$three_matches[,1:2])
as.data.frame(sim_func("France")$sim3$three_matches)[1,]
as.data.frame(sim_func("France")$sim3$three_matches)[1,1:2]
as.data.frame(t(sim_func("France")$sim3$three_matches))[1,1:2]
dim(as.data.frame(t(sim_func("France")$sim3$three_matches))[1,1:2])
dim(as.data.frame(sim_func("France")$sim3$three_matches)[1,1:2])
runApp('C:/Users/leoeg/Dropbox/World Cup 2018/shiny.R')
runApp('C:/Users/leoeg/Dropbox/World Cup 2018/shiny.R')
runApp('C:/Users/leoeg/Dropbox/World Cup 2018/shiny.R')
runApp('C:/Users/leoeg/Dropbox/World Cup 2018/shiny.R')
xx<-sim_func("France")
ss <- unica_simul(1, "France", xx)
ss$three_matches
source('C:/Users/leoeg/Dropbox/World Cup 2018/sim_func.R')
xx<-sim_func("France")
ss <- unica_simul(1, "France", xx)
ss$three_matches
as.data.frame(ss$three_matches)
as.data.frame(ss$three_matches)[,1:2]
as.data.frame(ss$three_matches)[1,1:2]
runApp('C:/Users/leoeg/Dropbox/World Cup 2018/shiny.R')
runApp('C:/Users/leoeg/Dropbox/World Cup 2018/shiny.R')
runApp('C:/Users/leoeg/Dropbox/World Cup 2018/shiny.R')
sim_func("Russia")
squadra="Russia"
sim1 <- initial_simulation(N, K, team1, team2, ranking,
p_norm, nteams, nsims,
squadra,int=1, sim1=NULL, sim2=NULL)
sim2 <- initial_simulation(N, K, team1, team2, ranking,
p_norm, nteams, nsims,
squadra,int=2,
sim1=sim1, sim2=NULL)
sim3 <- initial_simulation(N, K, team1, team2, ranking,
p_norm, nteams, nsims,
squadra,int=3,
sim1=sim1, sim2=sim2)
sim_func("France")
sim3$girone[1,1]
sim3$girone
if (sim3$girone[1,1]==squadra | sim3$girone[2,1]==squadra){
sim4 <- ottavi(sim3, nsims)
if (sum(sim4$team1_quarti == squadra)==1 |
sum(sim4$team2_quarti == squadra)==1){
sim5 <- quarti(sim3, sim4, nsims)
if (sum(sim5$team1_semi == squadra)==1 |
sum(sim5$team2_semi == squadra)==1){
sim6 <- semi(sim3, sim5, nsims)
if  (sim6$team1_final == squadra |
sim6$team2_final == squadra)  {
sim7 <- final(sim3, sim6, nsims)
if (sim7$winner==squadra){
return(list(sim1=sim1, sim2=sim2, sim3=sim3, sim4 = sim4,
sim5=sim5, sim6= sim6, sim7=sim7))
}else{
return(list(sim1=sim1, sim2=sim2, sim3=sim3, sim4 = sim4,
sim5=sim5, sim6= sim6))
}
}else{
return(list(sim1=sim1, sim2=sim2, sim3=sim3, sim4 = sim4,
sim5=sim5))
}
}else{
return(list(sim1=sim1, sim2=sim2, sim3=sim3, sim4 = sim4))
}
}
}else{
return(list(sim1=sim1, sim2=sim2, sim3=sim3))
}
sim4$team1_quarti
sim4$team2_quarti
sum(sim4$team1_quarti == squadra)==1 |
sum(sim4$team2_quarti == squadra)==1
runApp('C:/Users/leoeg/Dropbox/World Cup 2018/shiny.R')
runApp('C:/Users/leoeg/Dropbox/World Cup 2018/shiny.R')
runApp('C:/Users/leoeg/Dropbox/World Cup 2018/shiny.R')
runApp('C:/Users/leoeg/Dropbox/World Cup 2018/shiny.R')
runApp('C:/Users/leoeg/Dropbox/World Cup 2018/shiny.R')
runApp('C:/Users/leoeg/Dropbox/World Cup 2018/shiny.R')
runApp('C:/Users/leoeg/Dropbox/World Cup 2018/shiny.R')
runApp('C:/Users/leoeg/Dropbox/World Cup 2018/shiny.R')
runApp('C:/Users/leoeg/Dropbox/World Cup 2018/shiny.R')
runApp('C:/Users/leoeg/Dropbox/World Cup 2018/shiny.R')
runApp('C:/Users/leoeg/Dropbox/World Cup 2018/shiny.R')
runApp('C:/Users/leoeg/Dropbox/World Cup 2018/shiny.R')
runApp('C:/Users/leoeg/Dropbox/World Cup 2018/shiny.R')
runApp('C:/Users/leoeg/Dropbox/World Cup 2018/shiny.R')
runApp('C:/Users/leoeg/Dropbox/World Cup 2018/shiny.R')
library(shiny); runApp('C:/Users/leoeg/Dropbox/World Cup 2018/shiny.R')
runApp('C:/Users/leoeg/Dropbox/World Cup 2018/shiny.R')
runApp('C:/Users/leoeg/Dropbox/World Cup 2018/shiny.R')
runApp('C:/Users/leoeg/Dropbox/World Cup 2018/shiny.R')
runApp('C:/Users/leoeg/Dropbox/World Cup 2018/shiny.R')
runApp('C:/Users/leoeg/Dropbox/World Cup 2018/shiny.R')
library(shiny); runApp('C:/Users/leoeg/Dropbox/World Cup 2018/shiny.R')
runApp('C:/Users/leoeg/Dropbox/World Cup 2018/shiny.R')
runApp('C:/Users/leoeg/Dropbox/World Cup 2018/shiny.R')
runApp('C:/Users/leoeg/Dropbox/World Cup 2018/shiny.R')
runApp('C:/Users/leoeg/Dropbox/World Cup 2018/shiny.R')
runApp('C:/Users/leoeg/Dropbox/World Cup 2018/shiny.R')
spain <- c(2.1, 1.25, 1.36, 1.35, 2.14)
sum(spain)
portugal <- c(2.1, 1.65, 1.36, 1.56)
sum(portugal)
runApp('C:/Users/leoeg/Dropbox/World Cup 2018/shiny.R')
runApp('C:/Users/leoeg/Dropbox/World Cup 2018/shiny.R')
runApp('C:/Users/leoeg/Dropbox/World Cup 2018/shiny.R')
runApp('C:/Users/leoeg/Dropbox/World Cup 2018/shiny.R')
runApp('C:/Users/leoeg/Dropbox/World Cup 2018/shiny.R')
runApp('C:/Users/leoeg/Dropbox/World Cup 2018/shiny.R')
runApp('C:/Users/leoeg/Dropbox/World Cup 2018/shiny.R')
runApp('C:/Users/leoeg/Dropbox/World Cup 2018/shiny.R')
library(shiny); runApp('C:/Users/leoeg/Dropbox/World Cup 2018/shiny.R')
#caricamento
germania<- c(1.5, 1.44, 1.25, 1.44, 1.48, 1.61, 1.84)
sum(germania)
library(shiny); runApp('C:/Users/leoeg/Dropbox/World Cup 2018/shiny.R')
library(shiny); runApp('C:/Users/leoeg/Dropbox/World Cup 2018/shiny.R')
library(shiny); runApp('C:/Users/leoeg/Dropbox/World Cup 2018/shiny.R')
library(shiny); runApp('C:/Users/leoeg/Dropbox/World Cup 2018/shiny.R')
setwd("~/GitHub/pivmet")
library(pivmet)
help(piv_sim)
devtools::document()
