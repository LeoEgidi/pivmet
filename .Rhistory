help("pivotal_relabelling")
setwd("~/GitHub/pivmet")
install_github("leoegidi/pivmet")
.rs.restartR()
librry(pivmet)
library(pivmet)
help("pivotal_relabelling")
setwd("~/GitHub/pivmet")
library(rprojroot)
root <- rprojroot::is_r_package
readLines(root$find_file("DESCRIPTION"), 3)
root_file <- root$make_fix_file()
root_file
withr::with_dir(
"../..",
readLines(root_file("DESCRIPTION"), 3)
)
root_file <- root$make_fix_file("C:\\Users\\User Name\\...")
root_file <- root$make_fix_file("C:\\Users\\leonardo\\...")
root_file <- root$make_fix_file("C:\\Utenti\\leonardo\\...")
root_file()
ir(find_root(has_file("DESCRIPTION")))
dir(find_root(has_file("DESCRIPTION")))
rel_path_from_root <- "R/mus.R"
rel_path_from_root
has_file("DESCRIPTION")
rel_path_from_root <- find_root_file("R", "mus.R", criterion = has_file("DESCRIPTION"))
rel_path_from_root
file.exists(rel_path_from_root)
library(pivmet)
.rs.restartR()
library(pivmet)
help("pivotal_relabelling")
library(devtools)
install_github("leoegidi/pivmet")
library(pivmet)
help("pivotal_relabelling")
install_github("leoegidi/pivmet")
library(devtools)
install_github("leoegidi/pivmet")
library(pivmet)
??pivotal_relabelling
setwd("C:/Users/leonardo/Desktop")
setwd("C:/Users/leonardo/Desktop")
setwd("~/GitHub/pivmet")
remove.packages("pivmet", lib="~/R/win-library/3.4")
library(devtools)
install_github("leoegidi/pivmet")
library(pivmet)
help("pivotal_relabelling")
library(pivmet)
library(pivmet)
devtools::load_all(".")
library(pivmet)
devtools::load_all(".")
library(pivmet)
install_github("leoegidi/pivmet")
library(devtools)
install_github("leoegidi/pivmet")
install_github("leoegidi/pivmet")
library(pivmet)
library(pivmet)
load_all()
devtools::load_all(".")
library(pivmet)
devtools::load_all(".")
library(pivmet)
library("pivmet", lib.loc="~/R/win-library/3.4")
remove.packages("pivmet", lib="~/R/win-library/3.4")
library(pivmet)
devtools::document()
library(pivmet)
N <- 250
nMC <- 2500
k <- 3
p <- rep(1/k,k)
x <- 3
stdev <- cbind(rep(1,k), rep(200,k))
Mu <- seq(-trunc(k/2)*x,trunc(k/2)*x,length=k)
W <- c(0.2,0.8)
sim <- sim_mixture(N,k,Mu,stdev,W=W)
output_bayes <- bayesMCMC(sim$y, k, nMC)
relab_est <-
pivotal_relabelling(mu_switch = output_bayes$mu_switch,
group = output_bayes$groupPost,
clustering= output_bayes$clust_sel,
Mu=output_bayes$Mu,
nMC = nMC)
plot_pivotal(y= sim$y,
est = relab_est$mu_rel_median,
chains=relab_est$mu_rel_complete,
type="chains",
mu_switch=output_bayes$mu_switch,
n.iter=relab_est$Final_it,
true.means= output_bayes$Mu)
devtools::document()
library(pivmet)
N <- 200
k <- 3
M1 <- c(-.5,8)
M2 <- c(25.5,.1)
M3 <- c(49.5,8)
Mu <- matrix(rbind(M1,M2,M3,M3),c(k,2))
stdev <- cbind(rep(1,k), rep(200,k))
Sigma.p1 <- matrix(c(stdev[1,1],0,0,stdev[1,1]),
nrow=2, ncol=2)
Sigma.p2 <- matrix(c(stdev[1,2],0,0,stdev[1,2]),
nrow=2, ncol=2)
W <- c(0.2,0.8)
sim <- sim_mixture(N,k,Mu,stdev,Sigma.p1,Sigma.p2,W)
devtools::document()
library(pivmet)
devtools::document()
devtools::document()
library(pivmet)
Bivariate mixture simulation with three components
N <- 200
k <- 3
M1 <- c(-.5,8)
M2 <- c(25.5,.1)
M3 <- c(49.5,8)
Mu <- matrix(rbind(M1,M2,M3),c(k,2))
stdev <- cbind(rep(1,k), rep(200,k))
Sigma.p1 <- matrix(c(stdev[1,1],0,0,stdev[1,1]),
nrow=2, ncol=2)
Sigma.p2 <- matrix(c(stdev[1,2],0,0,stdev[1,2]),
nrow=2, ncol=2)
W <- c(0.2,0.8)
sim <- piv_sim(N,k,Mu,stdev,Sigma.p1,Sigma.p2,W)
sim$y
devtools::document()
library(pivmet)
N   <- 200
k   <- 4
nMC <- 1000
M1  <-c(-.5,8)
M2  <- c(25.5,.1)
M3  <- c(49.5,8)
M4  <- c(63.0,.1)
Mu  <- matrix(rbind(M1,M2,M3,M4),c(4,2))
stdev    <- cbind(rep(1,k), rep(200,k))
Sigma.p1 <- matrix(c(stdev[1,1],0,0,stdev[1,1]), nrow=2, ncol=2)
Sigma.p2 <- matrix(c(stdev[1,2],0,0,stdev[1,2]), nrow=2, ncol=2)
W <- c(0.2,0.8)
sim <- piv_sim(N,k,Mu, stdev, Sigma.p1,Sigma.p2,W)
res <- piv_MCMC(sim$y, k, nMC)
devtools::document()
library(pivmet)
data(fish)
y <- fish[,1]
k <- 5
nMC <- 5000
res <- piv_MCMC(y, k, nMC)
library(bayesmix)
data(fish)
y <- fish[,1]
k <- 5
nMC <- 5000
res <- piv_MCMC(y, k, nMC)
devtools::(document())
devtools::document()
devtools::document()
library(pivmet)
N <- 200
k <- 3
nMC <- 5000
M1  <- c(-.5,8)
M2  <- c(25.5,.1)
M3  <- c(49.5,8)
Mu  <- matrix(rbind(M1,M2,M3),c(k,2))
stdev <- cbind(rep(1,k), rep(200,k))
Sigma.p1 <- matrix(c(stdev[1,1],0,0,stdev[1,1]),
nrow=2, ncol=2)
Sigma.p2 <- matrix(c(stdev[1,2],0,0,stdev[1,2]),
nrow=2, ncol=2)
W <- c(0.2,0.8)
sim <- sim_mixture(N,k,Mu,stdev,Sigma.p1,Sigma.p2,W)
res <- bayesMCMC(sim$y, k, nMC)
rel <- piv_rel(mu_switch=res$mu_switch,
group=res$groupPost,
clustering=res$clust_sel,
Mu=res$Mu,
nMC = nMC)
plot_pivotal(y= sim$y,
est = rel$mu_rel_median,
chains=rel$mu_rel_complete,
type="chains",
mu_switch=res$mu_switch,
n.iter=rel$Final_it,
true.means= res$Mu)
devtools::document()
library(pivmet)
N <- 200
k <- 3
nMC <- 5000
M1  <- c(-.5,8)
M2  <- c(25.5,.1)
M3  <- c(49.5,8)
Mu  <- matrix(rbind(M1,M2,M3),c(k,2))
stdev <- cbind(rep(1,k), rep(200,k))
Sigma.p1 <- matrix(c(stdev[1,1],0,0,stdev[1,1]),
nrow=2, ncol=2)
Sigma.p2 <- matrix(c(stdev[1,2],0,0,stdev[1,2]),
nrow=2, ncol=2)
W <- c(0.2,0.8)
sim <- piv_sim(N,k,Mu,stdev,Sigma.p1,Sigma.p2,W)
res <- piv_MCMC(sim$y, k, nMC)
rel <- piv_rel(mu_switch=res$mu_switch,
group=res$groupPost,
clustering=res$clust_sel,
Mu=res$Mu,
nMC = nMC)
plot_pivotal(y= sim$y,
est = rel$mu_rel_median,
chains=rel$mu_rel_complete,
type="chains",
mu_switch=res$mu_switch,
n.iter=rel$Final_it,
true.means= res$Mu)
library(pivmet)
devtools:document()
devtools::document()
library(pivmet)
library(bayesmix)
data(fish)
y <- fish[,1]
k <- 5
nMC <- 5000
res <- piv_MCMC(y, k, nMC)
rel <- piv_rel(res$mu_switch, res$groupPost, res$clust_sel,
Mu=res$Mu,
nMC = nMC)
piv_plot(y, rel$mu_rel_median,
rel$mu_rel_complete,
type="chains",
res$mu_switch,
rel$Final_it, res$Mu)
piv_plot(y, rel$mu_rel_median,
rel$mu_rel_complete,
type="estimates",
res$mu_switch,
rel$Final_it, output_bayes$Mu)
piv_plot(y, rel$mu_rel_median,
rel$mu_rel_complete,
type="estimates_hist",
res$mu_switch,
rel$Final_it, res$Mu)
devtools::document()
library(pivmet)
devtools::document()
library(pivmet)
library(bayesmix)
data(fish)
y <- fish[,1]
N <- length(y)
k <- 5
nMC <- 5000
res <- piv_MCMC(y, k, nMC)
rel <- piv_rel(res$mu_switch, res$groupPost, res$clust_sel,
Mu=res$Mu,
nMC = nMC)
piv_plot(y, rel$mu_rel_median, rel$mu_rel_complete,
type="chains", res$mu_switch, rel$Final_it, res$Mu)
piv_plot(y, rel$mu_rel_median, rel$mu_rel_complete,
type="estimates", res$mu_switch, rel$Final_it, res$Mu)
piv_plot(y, rel$mu_rel_median, rel$mu_rel_complete,
type="estimates_hist", res$mu_switch, rel$Final_it, res$Mu)
n  <- 620
k  <- 3
n1 <- 20
n2 <- 100
n3 <- 500
x  <- matrix(NA, n,2)
truegroup <- c( rep(1,n1), rep(2, n2), rep(3, n3))
for (i in 1:n1){
x[i,]=rmvnorm(1, c(1,5), sigma=diag(2))}
for (i in 1:n2){
x[n1+i,]=rmvnorm(1, c(4,0), sigma=diag(2))}
for (i in 1:n3){
x[n1+n2+i,]=rmvnorm(1, c(6,6), sigma=diag(2))}
res <- piv_KMeans(x, k)
par(mfrow=c(1,2), pty="s")
colors_cluster <- c("grey", "darkolivegreen3", "coral")
colors_centers <- c("black", "darkgreen", "firebrick")
plot(x, col = colors_cluster[truegroup],
bg= colors_cluster[truegroup], pch=21, xlab="x[,1]",
ylab="x[,2]", cex.lab=1.5,
main="True data", cex.main=1.5)
plot(x, col = colors_cluster[res$cluster],
bg=colors_cluster[res$cluster], pch=21, xlab="x[,1]",
ylab="x[,2]", cex.lab=1.5,
main="MUSK-means", cex.main=1.5)
points(x[res$pivots[1],1], x[res$pivots[1],2],
pch=24, col=colors_centers[1],bg=colors_centers[1],
cex=1.5)
points(x[res$pivots[2],1], x[res$pivots[2],2],
pch=24,  col=colors_centers[2], bg=colors_centers[2],
cex=1.5)
points(x[res$pivots[3],1], x[res$pivots[3],2],
pch=24, col=colors_centers[3], bg=colors_centers[3],
cex=1.5)
points(res$centers, col = colors_centers[1:k],
pch = 8, cex = 2)
devtools::document()
library(pivmet)
help(rmvnorm)
help(fish)
help(diana)
diana(rnorm(10))
devtools::document()
library(pivmet)
n  <- 620
k  <- 3
n1 <- 20
n2 <- 100
n3 <- 500
x  <- matrix(NA, n,2)
truegroup <- c( rep(1,n1), rep(2, n2), rep(3, n3))
for (i in 1:n1){
x[i,]=rmvnorm(1, c(1,5), sigma=diag(2))}
for (i in 1:n2){
x[n1+i,]=rmvnorm(1, c(4,0), sigma=diag(2))}
for (i in 1:n3){
x[n1+n2+i,]=rmvnorm(1, c(6,6), sigma=diag(2))}
res <- piv_KMeans(x, k)
rmvnorm(1, c(6,6), diag(2))
library(pivmet)
rmvnorm(1, c(6,6), diag(2))
help(rmvnorm)
devtools::document()
library(pivmet)
n  <- 620
k  <- 3
n1 <- 20
n2 <- 100
n3 <- 500
x  <- matrix(NA, n,2)
truegroup <- c( rep(1,n1), rep(2, n2), rep(3, n3))
for (i in 1:n1){
x[i,]=rmvnorm(1, c(1,5), sigma=diag(2))}
for (i in 1:n2){
x[n1+i,]=rmvnorm(1, c(4,0), sigma=diag(2))}
for (i in 1:n3){
x[n1+n2+i,]=rmvnorm(1, c(6,6), sigma=diag(2))}
res <- piv_KMeans(x, k)
devtools::document()
library(pivmet)
n  <- 620
k  <- 3
n1 <- 20
n2 <- 100
n3 <- 500
x  <- matrix(NA, n,2)
truegroup <- c( rep(1,n1), rep(2, n2), rep(3, n3))
for (i in 1:n1){
x[i,]=rmvnorm(1, c(1,5), sigma=diag(2))}
for (i in 1:n2){
x[n1+i,]=rmvnorm(1, c(4,0), sigma=diag(2))}
for (i in 1:n3){
x[n1+n2+i,]=rmvnorm(1, c(6,6), sigma=diag(2))}
res <- piv_KMeans(x, k)
par(mfrow=c(1,2), pty="s")
colors_cluster <- c("grey", "darkolivegreen3", "coral")
colors_centers <- c("black", "darkgreen", "firebrick")
plot(x, col = colors_cluster[truegroup],
bg= colors_cluster[truegroup], pch=21, xlab="x[,1]",
ylab="x[,2]", cex.lab=1.5,
main="True data", cex.main=1.5)
data(fish)
y <- fish[,1]
N <- length(y)
k <- 5
nMC <- 5000
res <- piv_MCMC(y, k, nMC)
devtools::document()
library(pivmet)
x <- rt(10)
x <- rt(10,4)
ks.test(x, pnorm, mean(x), sd(x))
x <- rt(1000,4)
ks.test(x, pnorm, mean(x), sd(x))
help("bartlett.test")
require(graphics)
InsectSprays$count
InsectSprays$spray
help("anova")
anova(lm(InsectSprays$count~ InsectSprays$spray))
shapiro.test(x)
devtools::use_vignette("figa")
devtools::use_vignette("K-means clustering using the MUS algorithm")
4+4
prep_cprOPOS <- c(1.878,  1.989,  1.927,  1.832,
1.840,  1.791,  1.812)
prep_paOPOS <- c(1.767,1.723, 1.887,  1.810, 1.798, 1.836, 1.878)
cbind(prep_cprOPOS, prep_paOPOS)
help(t.test)
t.test( prep_cprOPOS, prep_paOPOS, alternative = "two.sided")
vettore_unico <- c(prep_cprOPOS, prep_paOPOS )
vettore_unico
mesi = gl(12,5)
mesi
operatori <- gl(7, 2)
operatori
metodi <- gl(2,7)
metodi
fit <- aov(vettore_unico ~ operatori+metodi)
anova(fit)
prep_cprOPOS <- c(1.878,  1.989,  1.927,  1.832,
1.840,  1.791,  1.812)
prep_cprSBS <- c( 2.019, 1.972, 1.787, 1.664, 1.753,
1.619, 1.745)
prep_paOPOS <- c(1.767,1.723, 1.887,  1.810, 1.798, 1.836, 1.878)
prep_paSBS <- c( 1.820, 1.963, 1.782, 1.794, 1.629,
1.730, 1.886)
cbind(prep_cprOPOS,  prep_cprSBS, prep_paOPOS, prep_paSBS )
operatori <- gl(7, 2)
operatori <- gl(7, 4)
operatori
metodi <- gl(4,7)          #compressa/principio attivo puro
metodi
metodi <- gl(2,14)          #compressa/principio attivo puro
metodi+
t
metodi
operatori <- gl(7, 4)
metodi <- gl(2,14)          #compressa/principio attivo puro
solvente <- c(rep(1,7), rep(2,7), rep(1,7), rep(2,7))        #solvente allestito in farmacia (SBS)/
solvente
operatori <- gl(7, 4)
metodi <- gl(2,14)          #compressa/principio attivo puro
solvente <- c(rep(1,7), rep(2,7), rep(1,7), rep(2,7))
fit <- aov(vettore_unico ~ operatori+metodi+solvente)
operatori <- gl(7, 4)
operatori
length(opertori)
length(operatori)
length(metodi+)
length(metodi)
length(solvente)
solvente <- as.factor(c(rep(1,7), rep(2,7), rep(1,7), rep(2,7)))
solvente
fit <- aov(vettore_unico ~ operatori+metodi+solvente)
fit <- aov(vettore_unico ~ operatori+metodi)
operatori <- gl(7, 4)
operatori
length(operatori)
metodi
vettore_unico <- c(prep_cprOPOS, prep_cprSBS,
prep_paOPOS,   prep_paSBS )
vettore_unico
operatori <- gl(7, 4)
metodi <- gl(2,14)          #compressa/principio attivo puro
solvente <- as.factor(c(rep(1,7), rep(2,7), rep(1,7), rep(2,7)))
fit <- aov(vettore_unico ~ operatori+metodi)
operatori <- gl(7, 4)
metodi <- gl(2,14)          #compressa/principio attivo puro
solvente <- as.factor(c(rep(1,7), rep(2,7), rep(1,7), rep(2,7)))
fit <- aov(vettore_unico ~ operatori+metodi+solvente)
anova(fit)
fit <- aov(vettore_unico ~ operatori*metodi*solvente)
anova(fit)
soglia <- rep(2,28)
soglia-vettore_unico
(soglia-vettore_unico)/2
100*(soglia-vettore_unico)/2
soglia <- rep(2,28)
diff_perc <- 100*(soglia-vettore_unico)/2
diff_01 <- c()
diff_01[diff_perc<=10] <- 1
diff_01[diff_perc>10]  <- 0
diff_01
mod_log <- glm( diff_01~ operatori+metodi+solvente,
family =binomial)
summary(mod_log)
mod_log <- glm( diff_01~ operatori*metodi*solvente,
family =binomial)
summary(mod_log)
help("glm")
mod_log <- glm( diff_01 ~ operatori+metodi+solvente,
family =binomial)
mod_log <- glm( diff_01 ~ operatori,
family =binomial)
summary(mod_log)
library(pivmet)
set.seed(123)
n  <- 620
centers  <- 3
n1 <- 20
n2 <- 100
n3 <- 500
x  <- matrix(NA, n,2)
truegroup <- c( rep(1,n1), rep(2, n2), rep(3, n3))
for (i in 1:n1){
x[i,]=rmvnorm(1, c(1,5), sigma=diag(2))}
for (i in 1:n2){
x[n1+i,]=rmvnorm(1, c(4,0), sigma=diag(2))}
for (i in 1:n3){
x[n1+n2+i,]=rmvnorm(1, c(6,6), sigma=diag(2))}
H <- 1000
a <- matrix(NA, H, n)
for (h in 1:H){
a[h,] <- kmeans(x,centers)$cluster
}
#build the similarity matrix
sim_matr <- matrix(1, n,n)
for (i in 1:(n-1)){
for (j in (i+1):n){
sim_matr[i,j] <- sum(a[,i]==a[,j])/H
sim_matr[j,i] <- sim_matr[i,j]
}
}
mus_alg <- MUS(matsim= sim_matr, clusters = cl, prec_par = 5)
