ss <- unica_simul(1, "France", xx)
ss$three_matches
source('C:/Users/leoeg/Dropbox/World Cup 2018/sim_func.R')
xx<-sim_func("France")
ss <- unica_simul(1, "France", xx)
ss$three_matches
as.data.frame(ss$three_matches)
as.data.frame(ss$three_matches)[,1:2]
as.data.frame(ss$three_matches)[1,1:2]
runApp('C:/Users/leoeg/Dropbox/World Cup 2018/shiny.R')
runApp('C:/Users/leoeg/Dropbox/World Cup 2018/shiny.R')
runApp('C:/Users/leoeg/Dropbox/World Cup 2018/shiny.R')
sim_func("Russia")
squadra="Russia"
sim1 <- initial_simulation(N, K, team1, team2, ranking,
p_norm, nteams, nsims,
squadra,int=1, sim1=NULL, sim2=NULL)
sim2 <- initial_simulation(N, K, team1, team2, ranking,
p_norm, nteams, nsims,
squadra,int=2,
sim1=sim1, sim2=NULL)
sim3 <- initial_simulation(N, K, team1, team2, ranking,
p_norm, nteams, nsims,
squadra,int=3,
sim1=sim1, sim2=sim2)
sim_func("France")
sim3$girone[1,1]
sim3$girone
if (sim3$girone[1,1]==squadra | sim3$girone[2,1]==squadra){
sim4 <- ottavi(sim3, nsims)
if (sum(sim4$team1_quarti == squadra)==1 |
sum(sim4$team2_quarti == squadra)==1){
sim5 <- quarti(sim3, sim4, nsims)
if (sum(sim5$team1_semi == squadra)==1 |
sum(sim5$team2_semi == squadra)==1){
sim6 <- semi(sim3, sim5, nsims)
if  (sim6$team1_final == squadra |
sim6$team2_final == squadra)  {
sim7 <- final(sim3, sim6, nsims)
if (sim7$winner==squadra){
return(list(sim1=sim1, sim2=sim2, sim3=sim3, sim4 = sim4,
sim5=sim5, sim6= sim6, sim7=sim7))
}else{
return(list(sim1=sim1, sim2=sim2, sim3=sim3, sim4 = sim4,
sim5=sim5, sim6= sim6))
}
}else{
return(list(sim1=sim1, sim2=sim2, sim3=sim3, sim4 = sim4,
sim5=sim5))
}
}else{
return(list(sim1=sim1, sim2=sim2, sim3=sim3, sim4 = sim4))
}
}
}else{
return(list(sim1=sim1, sim2=sim2, sim3=sim3))
}
sim4$team1_quarti
sim4$team2_quarti
sum(sim4$team1_quarti == squadra)==1 |
sum(sim4$team2_quarti == squadra)==1
runApp('C:/Users/leoeg/Dropbox/World Cup 2018/shiny.R')
runApp('C:/Users/leoeg/Dropbox/World Cup 2018/shiny.R')
runApp('C:/Users/leoeg/Dropbox/World Cup 2018/shiny.R')
runApp('C:/Users/leoeg/Dropbox/World Cup 2018/shiny.R')
runApp('C:/Users/leoeg/Dropbox/World Cup 2018/shiny.R')
runApp('C:/Users/leoeg/Dropbox/World Cup 2018/shiny.R')
runApp('C:/Users/leoeg/Dropbox/World Cup 2018/shiny.R')
runApp('C:/Users/leoeg/Dropbox/World Cup 2018/shiny.R')
runApp('C:/Users/leoeg/Dropbox/World Cup 2018/shiny.R')
runApp('C:/Users/leoeg/Dropbox/World Cup 2018/shiny.R')
runApp('C:/Users/leoeg/Dropbox/World Cup 2018/shiny.R')
runApp('C:/Users/leoeg/Dropbox/World Cup 2018/shiny.R')
runApp('C:/Users/leoeg/Dropbox/World Cup 2018/shiny.R')
runApp('C:/Users/leoeg/Dropbox/World Cup 2018/shiny.R')
runApp('C:/Users/leoeg/Dropbox/World Cup 2018/shiny.R')
library(shiny); runApp('C:/Users/leoeg/Dropbox/World Cup 2018/shiny.R')
runApp('C:/Users/leoeg/Dropbox/World Cup 2018/shiny.R')
runApp('C:/Users/leoeg/Dropbox/World Cup 2018/shiny.R')
runApp('C:/Users/leoeg/Dropbox/World Cup 2018/shiny.R')
runApp('C:/Users/leoeg/Dropbox/World Cup 2018/shiny.R')
runApp('C:/Users/leoeg/Dropbox/World Cup 2018/shiny.R')
library(shiny); runApp('C:/Users/leoeg/Dropbox/World Cup 2018/shiny.R')
runApp('C:/Users/leoeg/Dropbox/World Cup 2018/shiny.R')
runApp('C:/Users/leoeg/Dropbox/World Cup 2018/shiny.R')
runApp('C:/Users/leoeg/Dropbox/World Cup 2018/shiny.R')
runApp('C:/Users/leoeg/Dropbox/World Cup 2018/shiny.R')
runApp('C:/Users/leoeg/Dropbox/World Cup 2018/shiny.R')
spain <- c(2.1, 1.25, 1.36, 1.35, 2.14)
sum(spain)
portugal <- c(2.1, 1.65, 1.36, 1.56)
sum(portugal)
runApp('C:/Users/leoeg/Dropbox/World Cup 2018/shiny.R')
runApp('C:/Users/leoeg/Dropbox/World Cup 2018/shiny.R')
runApp('C:/Users/leoeg/Dropbox/World Cup 2018/shiny.R')
runApp('C:/Users/leoeg/Dropbox/World Cup 2018/shiny.R')
runApp('C:/Users/leoeg/Dropbox/World Cup 2018/shiny.R')
runApp('C:/Users/leoeg/Dropbox/World Cup 2018/shiny.R')
runApp('C:/Users/leoeg/Dropbox/World Cup 2018/shiny.R')
runApp('C:/Users/leoeg/Dropbox/World Cup 2018/shiny.R')
library(shiny); runApp('C:/Users/leoeg/Dropbox/World Cup 2018/shiny.R')
#caricamento
germania<- c(1.5, 1.44, 1.25, 1.44, 1.48, 1.61, 1.84)
sum(germania)
library(shiny); runApp('C:/Users/leoeg/Dropbox/World Cup 2018/shiny.R')
library(shiny); runApp('C:/Users/leoeg/Dropbox/World Cup 2018/shiny.R')
library(shiny); runApp('C:/Users/leoeg/Dropbox/World Cup 2018/shiny.R')
library(shiny); runApp('C:/Users/leoeg/Dropbox/World Cup 2018/shiny.R')
setwd("~/GitHub/pivmet")
library(pivmet)
help(piv_sim)
devtools::document()
devtools::document()
library(pivmet)
help("piv_sim")
devtools::document()
library(pivmet)
devtools::document()
library(pivmet)
N  <- 2000
k  <- 3
M1 <- c(-45,8)
M2 <- c(45,.1)
M3 <- c(100,8)
Mu <- matrix(rbind(M1,M2,M3),c(k,2))
stdev    <- cbind(rep(1,k), rep(200,k))
Sigma.p1 <- matrix(c(stdev[1,1],0,0,stdev[1,1]),
nrow=2, ncol=2)
Sigma.p2 <- matrix(c(stdev[1,2],0,0,stdev[1,2]),
nrow=2, ncol=2)
W   <- c(0.2,0.8)
sim <- piv_sim(N,k,Mu,Sigma.p1,Sigma.p2,W)
plot(sim$y, xlab="y[,1]", ylab="y[,2]")
matrix(c(100,0,0,100),2,2, byrow = TRUE)
piv_sim <- function(N,
k,
Mu,
stdev,
Sigma.p1 = matrix(c(1,0,0,1),2,2, byrow = TRUE),
Sigma.p2 = matrix(c(100,0,0,100),2,2, byrow = TRUE),
W = c(0.5, 0.5)){
# Generation---------------
if(missing(stdev)){
stdev <- matrix(cbind(rep(1,k), rep(100,k)))
}
if (is.vector(Mu)){
true.group <- sample(1:k,N,replace=TRUE,prob=rep(1/k,k))
Spike <- array()
matrixpi <- matrix(rep(W,k), nrow=k, ncol=2, byrow = T)
sotto.gruppi <- matrix(0, nrow=k, ncol=N)
y <- c()
for (i in 1:N){
sotto.gruppi[,i] <- sample(1:2, k, replace=T,
prob=matrixpi[true.group[i],])
y[i] <- rnorm(1, mean=Mu[true.group[i]],
sd=stdev[sotto.gruppi[true.group[i],i]])
}
}else{
true.group <- sample(1:k,N,replace=TRUE,prob=rep(1/k,k))
Spike <- array(c(Sigma.p1,Sigma.p2), dim=c(2,2,2))
# Probability matrix of subgroups
matrixpi <- matrix(rep(W,k), nrow=k, ncol=2, byrow = T)
sotto.gruppi <- matrix(0, nrow=k, ncol=N)
for (i in 1:N){
sotto.gruppi[,i] <- sample(1:2,k,replace=T,
prob=matrixpi[true.group[i],])
}
# Simulation of N units from a mixture of mixtures
y <- matrix(NA,nrow=N,ncol=2)
for (i in 1:length(true.group)){
y[i,] <- mvrnorm(1, Mu[true.group[i],],
Sigma=Spike[,,sotto.gruppi[true.group[i],i]])
}
}
return(list(y=y, true.group=true.group, subgroups=sotto.gruppi))
}
N  <- 2000
k  <- 3
M1 <- c(-45,8)
M2 <- c(45,.1)
M3 <- c(100,8)
Mu <- matrix(rbind(M1,M2,M3),c(k,2))
stdev    <- cbind(rep(1,k), rep(200,k))
Sigma.p1 <- matrix(c(stdev[1,1],0,0,stdev[1,1]),
nrow=2, ncol=2)
Sigma.p2 <- matrix(c(stdev[1,2],0,0,stdev[1,2]),
nrow=2, ncol=2)
W   <- c(0.2,0.8)
sim <- piv_sim(N,k,Mu,Sigma.p1,Sigma.p2,W)
plot(sim$y, xlab="y[,1]", ylab="y[,2]")
true.group <- sample(1:k,N,replace=TRUE,prob=rep(1/k,k))
Spike <- array(c(Sigma.p1,Sigma.p2), dim=c(2,2,2))
# Probability matrix of subgroups
matrixpi <- matrix(rep(W,k), nrow=k, ncol=2, byrow = T)
sotto.gruppi <- matrix(0, nrow=k, ncol=N)
for (i in 1:N){
sotto.gruppi[,i] <- sample(1:2,k,replace=T,
prob=matrixpi[true.group[i],])
}
sotto.gruppi
# Simulation of N units from a mixture of mixtures
y <- matrix(NA,nrow=N,ncol=2)
for (i in 1:length(true.group)){
y[i,] <- mvrnorm(1, Mu[true.group[i],],
Sigma=Spike[,,sotto.gruppi[true.group[i],i]])
}
i
# Simulation of N units from a mixture of mixtures
y <- matrix(NA,nrow=N,ncol=2)
for (i in 1:length(true.group)){
y[i,] <- mvrnorm(1, Mu[true.group[i],],
Sigma=Spike[,,sotto.gruppi[true.group[i],i]])
}
Sigma.p1
Sigma.p2
true.group <- sample(1:k,N,replace=TRUE,prob=rep(1/k,k))
Spike <- array(c(Sigma.p1,Sigma.p2), dim=c(2,2,2))
# Probability matrix of subgroups
matrixpi <- matrix(rep(W,k), nrow=k, ncol=2, byrow = T)
sotto.gruppi <- matrix(0, nrow=k, ncol=N)
for (i in 1:N){
sotto.gruppi[,i] <- sample(1:2,k,replace=T,
prob=matrixpi[true.group[i],])
}
piv_sim <- function(N,
k,
Mu,
stdev,
Sigma.p1 = matrix(c(1,0,0,1),2,2, byrow = TRUE),
Sigma.p2 = matrix(c(100,0,0,100),2,2, byrow = TRUE),
W = c(0.5, 0.5)){
# Generation---------------
if(missing(stdev)){
stdev <- matrix(cbind(rep(1,k), rep(100,k)))
}
if (is.vector(Mu)){
true.group <- sample(1:k,N,replace=TRUE,prob=rep(1/k,k))
Spike <- array()
matrixpi <- matrix(rep(W,k), nrow=k, ncol=2, byrow = T)
sotto.gruppi <- matrix(0, nrow=k, ncol=N)
y <- c()
for (i in 1:N){
sotto.gruppi[,i] <- sample(1:2, k, replace=T,
prob=matrixpi[true.group[i],])
y[i] <- rnorm(1, mean=Mu[true.group[i]],
sd=stdev[sotto.gruppi[true.group[i],i]])
}
}else{
true.group <- sample(1:k,N,replace=TRUE,prob=rep(1/k,k))
Spike <- array(c(Sigma.p1,Sigma.p2), dim=c(2,2,2))
# Probability matrix of subgroups
matrixpi <- matrix(rep(W,k), nrow=k, ncol=2, byrow = T)
sotto.gruppi <- matrix(0, nrow=k, ncol=N)
for (i in 1:N){
sotto.gruppi[,i] <- sample(1:2,k,replace=T,
prob=matrixpi[true.group[i],])
}
# Simulation of N units from a mixture of mixtures
y <- matrix(NA,nrow=N,ncol=2)
for (i in 1:length(true.group)){
y[i,] <- mvrnorm(1, Mu[true.group[i],],
Sigma=Spike[,,sotto.gruppi[true.group[i],i]])
}
}
return(list(y=y, true.group=true.group, subgroups=sotto.gruppi))
}
sim <- piv_sim(N,k,Mu,Sigma.p1,Sigma.p2,W)
Sigma.p1
piv_sim <- function(N,
k,
Mu,
stdev,
Sigma.p1 = matrix(c(1,0,0,1),2,2, byrow = TRUE),
Sigma.p2 = matrix(c(100,0,0,100),2,2, byrow = TRUE),
W = c(0.5, 0.5)){
# Generation---------------
if(missing(stdev)){
stdev <- matrix(cbind(rep(1,k), rep(200,k)))
}
if (is.vector(Mu)){
true.group <- sample(1:k,N,replace=TRUE,prob=rep(1/k,k))
Spike <- array()
matrixpi <- matrix(rep(W,k), nrow=k, ncol=2, byrow = T)
sotto.gruppi <- matrix(0, nrow=k, ncol=N)
y <- c()
for (i in 1:N){
sotto.gruppi[,i] <- sample(1:2, k, replace=T,
prob=matrixpi[true.group[i],])
y[i] <- rnorm(1, mean=Mu[true.group[i]],
sd=stdev[sotto.gruppi[true.group[i],i]])
}
}else{
true.group <- sample(1:k,N,replace=TRUE,prob=rep(1/k,k))
Spike <- array(c(Sigma.p1,Sigma.p2), dim=c(2,2,2))
# Probability matrix of subgroups
matrixpi <- matrix(rep(W,k), nrow=k, ncol=2, byrow = T)
sotto.gruppi <- matrix(0, nrow=k, ncol=N)
for (i in 1:N){
sotto.gruppi[,i] <- sample(1:2,k,replace=T,
prob=matrixpi[true.group[i],])
}
# Simulation of N units from a mixture of mixtures
y <- matrix(NA,nrow=N,ncol=2)
for (i in 1:length(true.group)){
y[i,] <- mvrnorm(1, Mu[true.group[i],],
Sigma=Spike[,,sotto.gruppi[true.group[i],i]])
}
}
return(list(y=y, true.group=true.group, subgroups=sotto.gruppi))
}
sim <- piv_sim(N,k,Mu,Sigma.p1,Sigma.p2,W)
stdev
sim <- piv_sim(N,k,Mu, stdev,Sigma.p1,Sigma.p2,W)
piv_sim <- function(N,
k,
Mu,
stdev,
Sigma.p1 = matrix(c(1,0,0,1),2,2, byrow = TRUE),
Sigma.p2 = matrix(c(100,0,0,100),2,2, byrow = TRUE),
W = c(0.5, 0.5)){
# Generation---------------
if(missing(stdev)){
stdev <- matrix(cbind(rep(1,k), rep(200,k)))
}
if (is.vector(Mu)){
true.group <- sample(1:k,N,replace=TRUE,prob=rep(1/k,k))
Spike <- array()
matrixpi <- matrix(rep(W,k), nrow=k, ncol=2, byrow = T)
sotto.gruppi <- matrix(0, nrow=k, ncol=N)
y <- c()
for (i in 1:N){
sotto.gruppi[,i] <- sample(1:2, k, replace=T,
prob=matrixpi[true.group[i],])
y[i] <- rnorm(1, mean=Mu[true.group[i]],
sd=stdev[sotto.gruppi[true.group[i],i]])
}
}else{
true.group <- sample(1:k,N,replace=TRUE,prob=rep(1/k,k))
Spike <- array(c(Sigma.p1,Sigma.p2), dim=c(2,2,2))
# Probability matrix of subgroups
matrixpi <- matrix(rep(W,k), nrow=k, ncol=2, byrow = T)
sotto.gruppi <- matrix(0, nrow=k, ncol=N)
for (i in 1:N){
sotto.gruppi[,i] <- sample(1:2,k,replace=T,
prob=matrixpi[true.group[i],])
}
# Simulation of N units from a mixture of mixtures
y <- matrix(NA,nrow=N,ncol=2)
for (i in 1:length(true.group)){
y[i,] <- mvrnorm(1, Mu[true.group[i],],
Sigma=Spike[,,sotto.gruppi[true.group[i],i]])
}
}
return(list(y=y, true.group=true.group, subgroups=sotto.gruppi))
}
sim <- piv_sim(N,k,Mu, stdev,Sigma.p1,Sigma.p2,W)
sim$y
sim <- piv_sim(N,k,Mu,Sigma.p1,Sigma.p2,W)
devtools::document()
library(pivmet)
piv_sim <- function(N,
k,
Mu,
stdev,
Sigma.p1 = matrix(c(1,0,0,1),2,2, byrow = TRUE),
Sigma.p2 = matrix(c(100,0,0,100),2,2, byrow = TRUE),
W = c(0.5, 0.5)){
# Generation---------------
if(missing(stdev)){
stdev <- matrix(cbind(rep(1,k), rep(200,k)))
}
if (is.vector(Mu)){
true.group <- sample(1:k,N,replace=TRUE,prob=rep(1/k,k))
Spike <- array()
matrixpi <- matrix(rep(W,k), nrow=k, ncol=2, byrow = T)
sotto.gruppi <- matrix(0, nrow=k, ncol=N)
y <- c()
for (i in 1:N){
sotto.gruppi[,i] <- sample(1:2, k, replace=T,
prob=matrixpi[true.group[i],])
y[i] <- rnorm(1, mean=Mu[true.group[i]],
sd=stdev[sotto.gruppi[true.group[i],i]])
}
}else{
true.group <- sample(1:k,N,replace=TRUE,prob=rep(1/k,k))
Spike <- array(c(Sigma.p1,Sigma.p2), dim=c(2,2,2))
# Probability matrix of subgroups
matrixpi <- matrix(rep(W,k), nrow=k, ncol=2, byrow = T)
sotto.gruppi <- matrix(0, nrow=k, ncol=N)
for (i in 1:N){
sotto.gruppi[,i] <- sample(1:2,k,replace=T,
prob=matrixpi[true.group[i],])
}
# Simulation of N units from a mixture of mixtures
y <- matrix(NA,nrow=N,ncol=2)
for (i in 1:length(true.group)){
y[i,] <- mvrnorm(1, Mu[true.group[i],],
Sigma=Spike[,,sotto.gruppi[true.group[i],i]])
}
}
return(list(y=y, true.group=true.group, subgroups=sotto.gruppi))
}
piv_sim(N,k,Mu,Sigma.p1,Sigma.p2,W)
piv_sim(N,k,Mu, stdev, Sigma.p1,Sigma.p2,W)
matrix(cbind(rep(1,k), rep(200,k)))
piv_sim <- function(N,
k,
Mu,
stdev,
Sigma.p1 = matrix(c(1,0,0,1),2,2, byrow = TRUE),
Sigma.p2 = matrix(c(100,0,0,100),2,2, byrow = TRUE),
W = c(0.5, 0.5)){
# Generation---------------
if(missing(stdev)){
stdev <- cbind(rep(1,k), rep(200,k))
}
if (is.vector(Mu)){
true.group <- sample(1:k,N,replace=TRUE,prob=rep(1/k,k))
Spike <- array()
matrixpi <- matrix(rep(W,k), nrow=k, ncol=2, byrow = T)
sotto.gruppi <- matrix(0, nrow=k, ncol=N)
y <- c()
for (i in 1:N){
sotto.gruppi[,i] <- sample(1:2, k, replace=T,
prob=matrixpi[true.group[i],])
y[i] <- rnorm(1, mean=Mu[true.group[i]],
sd=stdev[sotto.gruppi[true.group[i],i]])
}
}else{
true.group <- sample(1:k,N,replace=TRUE,prob=rep(1/k,k))
Spike <- array(c(Sigma.p1,Sigma.p2), dim=c(2,2,2))
# Probability matrix of subgroups
matrixpi <- matrix(rep(W,k), nrow=k, ncol=2, byrow = T)
sotto.gruppi <- matrix(0, nrow=k, ncol=N)
for (i in 1:N){
sotto.gruppi[,i] <- sample(1:2,k,replace=T,
prob=matrixpi[true.group[i],])
}
# Simulation of N units from a mixture of mixtures
y <- matrix(NA,nrow=N,ncol=2)
for (i in 1:length(true.group)){
y[i,] <- mvrnorm(1, Mu[true.group[i],],
Sigma=Spike[,,sotto.gruppi[true.group[i],i]])
}
}
return(list(y=y, true.group=true.group, subgroups=sotto.gruppi))
}
piv_sim(N,k,Mu, stdev, Sigma.p1,Sigma.p2,W)
piv_sim(N,k,Mu, Sigma.p1,Sigma.p2,W)
piv_sim(N,k,Mu, Sigma.p1,Sigma.p2,W)
cbind(rep(1,k), rep(200,k))
piv_sim(N,k,Mu, Sigma.p1=Sigma.p1,Sigma.p2=Sigma.p2,W)
devtools::document()
devtools::document()
library(pivmet)
N  <- 2000
k  <- 3
M1 <- c(-45,8)
M2 <- c(45,.1)
M3 <- c(100,8)
Mu <- matrix(rbind(M1,M2,M3),c(k,2))
stdev    <- cbind(rep(1,k), rep(200,k))
Sigma.p1 <- matrix(c(stdev[1,1],0,0,stdev[1,1]),
nrow=2, ncol=2)
Sigma.p2 <- matrix(c(stdev[1,2],0,0,stdev[1,2]),
nrow=2, ncol=2)
W   <- c(0.2,0.8)
sim <- piv_sim(N, k, Mu, Sigma.p1 = Sigma.p1,
Sigma.p2 = Sigma.p2, W)
plot(sim$y, xlab="y[,1]", ylab="y[,2]")
devtools::document()
library(pivmet)
N   <- 200
k   <- 4
nMC <- 1000
M1  <-c(-.5,8)
M2  <- c(25.5,.1)
M3  <- c(49.5,8)
M4  <- c(63.0,.1)
Mu  <- matrix(rbind(M1,M2,M3,M4),c(4,2))
stdev    <- cbind(rep(1,k), rep(200,k))
Sigma.p1 <- matrix(c(stdev[1,1],0,0,stdev[1,1]), nrow=2, ncol=2)
Sigma.p2 <- matrix(c(stdev[1,2],0,0,stdev[1,2]), nrow=2, ncol=2)
W <- c(0.2,0.8)
sim <- piv_sim(N,k,Mu, stdev, Sigma.p1,Sigma.p2,W)
res <- piv_MCMC(sim$y, k, nMC)
res$Freq
colnames(res$Freq)<-c("Bella", "da")
res$Freq
res$groupPost
dim(res$groupPost)
res$true.iter
dim(res$z)
res$z[1,,]
table(res$z)
res$z[1,,1]
res$z[2,,1]
dim(res$ris)
res$groupPost
dim(res$groupPost)
dim(res$mu_switch)
dim(res$mu_raw)
res$pivots
res$piv.criterion
devtools::document()
library(pivmet)
rel   <- piv_rel(mcmc=res, nMC = nMC)
rel$mu_rel_complete
dim(rel$mu_rel_complete)
dim(rel$mu_rel_mean)
devtools::document()
library(pivmet)
