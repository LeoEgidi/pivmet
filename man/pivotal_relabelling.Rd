% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/relab.R
\name{pivotal_relabelling}
\alias{pivotal_relabelling}
\title{Perfrom the pivotal relabelling step and compute the relabelled posterior estimates}
\usage{
pivotal_relabelling(mu_switch, group, clustering, Mu, nMC)
}
\arguments{
\item{mu_switch}{The post-processed MCMC chains for the mean parameters.}

\item{group}{The units' group membership obtained after post-processing the chain.}

\item{clustering}{The output from clustering (\code{diana} or \code{HClust}).}

\item{Mu}{the true means (or an estimate for them).}

\item{nMC}{the number of total MCMC iterations (given in input for the function \code{BayesMCMC}).}
}
\value{
This function gives the relabelled posterior estimates--both mean and medians--obtained from the Markov chains of the MCMC sampling.

\item{\code{mu_rel_mean}}{ Estimated posterior means}
\item{\code{mu_rel_median}}{ Estimated posterior medians}
\item{\code{mu_rel_complete}}{Complete relabelled chains}
}
\description{
This function allows to perform the pivotal relabelling procedure described in Egidi et al. (2017) and to obtain the relabelled posterior estimates.
}
\details{
Prototypical models in which the label switching problem arises are mixture models, where for a sample \eqn{\vy=(y_1,\ldots,y_n)} we assume
 \deqn{
(Y_i|Z_i=j) \sim f(y;\mu_j,\phi),
}
where the \eqn{Z_i}, \eqn{i=1,\ldots,n}, are i.i.d.\ random variables, \eqn{g=j,\dots,k},
\eqn{\phi} is a parameter which is common to all components,  \eqn{Z_i\in\{1,\ldots,k\}},
and
\deqn{
P(Z_i=k)=\pi_k.
}
we assume that an MCMC sample is obtained from the posterior distribution for model above--for instance via \code{bayesMCMC} function--with a prior distribution which is labelling invariant.
We denote as \eqn{\{\ca{\theta}:h=1,\ldots,H\}} the sample for the parameter \eqn{\theta}
=(\vmu,\vpi,\phi)\}, \eqn{H} being the number of MCMC iterations.
We assume that also a MCMC sample for the variable \eqn{Z} is obtained and denote it by  \eqn{\{\ca{Z}:h=1,\ldots,H\}}.
Let, then, \eqn{\mathcal J_1,\ldots,\mathcal J_{k}} be a partition, obtained via \code{diana} or \code{hclust}.
Furthermore, suppose that we can find \eqn{k} units, \eqn{i_1,\ldots,i_{k}}, one
for each group, which are (pairwise) separated with (posterior) probability one
(that is, the posterior probability of any two of them being in the same group
is zero). In terms of the matrix \eqn{C} with elements \eqn{c_{ip}=P(Z_i=Z_p|\mathcal y
)}, the \eqn{k\times k} submatrix with only the rows and columns correspondi
ng to \eqn{i_1,\ldots,i_{k}}, will be the identity matrix.
It is then straightforward to use the \eqn{k} units, called pivots in what follows, to identify the groups and to relabel the chains: for each \eqn{h=1,\ldots, H} and \eqn{j=1
, \ldots,k}, set
\deqn{
\ca{\mu_j}=\ca{\mu_{\ca{Z_{i_j}}}};
}
\deqn{
\ca{Z_i}=j \mbox{ for } i:\ca{Z_i}=\ca{Z_{i_j}}.
}
First, although the model is based on a mixture of \eqn{k} components, each iteration of the chain may imply a different number of non-empty groups (that is, it may be that \eqn{[Z_i]_h\neq k\;\; \forall i} for some \eqn{j,h}); let then \eqn{\ca{k}\leq k} be the number of non-empty groups at iteration \eqn{h},
\deqn{
 \ca{k} = \#\{j: \ca{Z_i}=j\mbox{ for some }i\},
 }
where \eqn{\#A} is the cardinality of the set \eqn{A}.
If \eqn{\ca{k}<k} for some \eqn{h}, there cannot be \eqn{k} perfectly separated units, and so there cannot be \eqn{k} pivots.
Hence, the relabelling procedure outlined above can be used only for the subset of the chain for which \eqn{\ca{k}=k}; let it be \eqn{\hh_k=\{h:\ca{k}= k\}}, the \code{true.iter} argument.
Even if \eqn{k} non-empty groups are available, however, there may not be \eqn{k} perfectly separated units. Let us define
\deqn{
 \hh^{*}_k=\{ h\in\hh_k : \exists r,s \mbox{ s.t. } \ca{Z_{i_r}}=\ca{Z_{i_s}} \}
 }
that is, the set of iterations where (at least) two pivots are in the same group.
In order for the pivot method to be applicable, we need to exclude iterations #'\eqn{\hh^*_k}; that is, we can perform the pivot relabelling on \eqn{\hh_k-\hh_k^*}.
}
\examples{

#Univariate simulation

N <- 200
k <- 4
p <- rep(1/k,k)
x <- 3
stdev <- cbind(rep(1,k), rep(200,k))
Mu <- seq(-trunc(k/2)*x,trunc(k/2)*x,length=k)
W <- c(0.2,0.8)
sim <- sim_mixture(N,k,Mu,stdev,W=W)
output_bayes <- bayesMCMC(sim$y, k, nMC)
relab_est <-
pivotal_relabelling(mu_switch = output_bayes$mu_switch,
                    group = output_bayes$groupPost,
                    clustering= output_bayes$clust_sel,
                    Mu=output_bayes$Mu,
                    nMC = nMC)


plot_pivotal(y= sim$y,
             est = relab_est$mu_rel_median,
             chains=relab_est$mu_rel_complete,
             type="chains",
             mu_switch=output_bayes$mu_switch,
             n.iter=relab_est$Final_it,
             true.means= output_bayes$Mu)

plot_pivotal(y= sim$y,
             est = relab_est$mu_rel_median,
             chains=relab_est$mu_rel_complete,
             type="estimates",
             mu_switch=output_bayes$mu_switch,
             n.iter=relab_est$Final_it,
             true.means= output_bayes$Mu)

plot_pivotal(y= sim$y,
             est = relab_est$mu_rel_median,
             chains=relab_est$mu_rel_complete,
             type="estimates_hist",
             mu_switch=output_bayes$mu_switch,
             n.iter=relab_est$Final_it,
             true.means= output_bayes$Mu)


#Bivariate simulation

N <- 200
k <- 3
nMC <- 5000
M1  <- c(-.5,8)
M2  <- c(25.5,.1)
M3  <- c(49.5,8)
Mu  <- matrix(rbind(M1,M2,M3),c(k,2))
stdev <- cbind(rep(1,k), rep(200,k))
Sigma.p1 <- matrix(c(stdev[1,1],0,0,stdev[1,1]),
                   nrow=2, ncol=2)
Sigma.p2 <- matrix(c(stdev[1,2],0,0,stdev[1,2]),
                   nrow=2, ncol=2)
W <- c(0.2,0.8)
sim <- sim_mixture(N,k,Mu,stdev,Sigma.p1,Sigma.p2,W)
output_bayes <- bayesMCMC(sim$y, k, nMC)
relab_est <-
pivotal_relabelling(mu_switch=output_bayes$mu_switch,
                 group=output_bayes$groupPost,
                 clustering=output_bayes$clust_sel,
                 Mu=output_bayes$Mu,
                 nMC = nMC)

plot_pivotal(y= sim$y,
             est = relab_est$mu_rel_median,
             chains=relab_est$mu_rel_complete,
             type="chains",
             mu_switch=output_bayes$mu_switch,
             n.iter=relab_est$Final_it,
             true.means= output_bayes$Mu)

plot_pivotal(y= sim$y,
             est = relab_est$mu_rel_median,
             chains=relab_est$mu_rel_complete,
             type="estimates_hist",
             mu_switch=output_bayes$mu_switch,
             n.iter=relab_est$Final_it,
             true.means= output_bayes$Mu)



}
\references{
Egidi, L., Pappada, R., Pauli, F. and Torelli, N. (2018). Relabelling in Bayesian Mixture
Models by Pivotal Units. Statistics and Computing, 28(4), 957-969, DOI 10.1007/s11222-017-  9774-2.
}
\author{
Leonardo Egidi \url{legidi@units.it}
}
